#####
##### PROPAGANDA SYSTEM #####
#####
RUS_achievement_propaganda_counter_effect = {
	if = {
		limit = {
			check_variable = { var = propaganda_counter value = 1 compare = less_than }
		}
		set_variable = { var = propaganda_counter value = 1 } #setup variable
	}
	else = {
		add_to_variable = {
			propaganda_counter = 1
		}
	}
}
RUS_pick_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { RUS_poster_left_icon_frame = RUS_propaganda_empty_slot_index }
			}
			set_variable = { RUS_poster_left_icon_frame = RUS_new_propaganda_campaign }
			#Ageing posters
			set_variable = { RUS_propaganda_left_poster_to_age = RUS_poster_left_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.101 days = RUS_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = RUS_propaganda_left_days_remaining_flag days = RUS_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = RUS_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = RUS_propaganda_left_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = RUS_propaganda_left_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { RUS_poster_center_icon_frame = RUS_propaganda_empty_slot_index }
			}
			set_variable = { RUS_poster_center_icon_frame = RUS_new_propaganda_campaign }
			#Ageing posters
			set_variable = { RUS_propaganda_center_poster_to_age = RUS_poster_center_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.102 days = RUS_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = RUS_propaganda_center_days_remaining_flag days = RUS_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = RUS_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = RUS_propaganda_center_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = RUS_propaganda_center_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		else_if = {
			limit = {
				check_variable = { RUS_poster_right_icon_frame = RUS_propaganda_empty_slot_index }
			}
			set_variable = { RUS_poster_right_icon_frame = RUS_new_propaganda_campaign }
			#Ageing posters
			set_variable = { RUS_propaganda_right_poster_to_age = RUS_poster_right_icon_frame } #This is used to prevent the system to break if a propaganda campaign is cancelled
			hidden_effect = {
				country_event = { id = NSB_soviet_propaganda_capmaign_events.103 days = RUS_default_propaganda_campaign_old_days }
				#set_country_flag = { flag = RUS_propaganda_right_days_remaining_flag days = RUS_default_propaganda_campaign_duration } #Surprise! This doesnät work with vars :D  Maybe in the future
				if = { #Debug -> Faster time
					limit = {
						has_country_flag = RUS_debug_fast_propaganda_campaigns_flag
					}
					set_country_flag = { flag = RUS_propaganda_right_days_remaining_flag days = 5 }
				}
				else = { #Regular time
					set_country_flag = { flag = RUS_propaganda_right_days_remaining_flag days = 180 } #Need code support to use a var here
				}
			}
		}
		set_variable = { RUS_new_propaganda_campaign = 0 } # Reset var
		add_to_variable = { RUS_propaganda_campaigns_taken = 1 } #Update propaganda campaigns counter
	}
}

RUS_reset_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { RUS_poster_left_icon_frame = RUS_propaganda_campaign_to_remove }
			}
			set_variable = { RUS_poster_left_icon_frame = RUS_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = RUS_propaganda_left_poster_to_age
			clr_country_flag = RUS_propaganda_left_slot_is_old_flag
		}
		else_if = {
			limit = {
				check_variable = { RUS_poster_center_icon_frame = RUS_propaganda_campaign_to_remove }
			}
			set_variable = { RUS_poster_center_icon_frame = RUS_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = RUS_propaganda_center_poster_to_age
			clr_country_flag = RUS_propaganda_center_slot_is_old_flag
		}
		else_if = { #This could be turned into an else, but leaving it like this to hopefully make it easier to see
			limit = {
				check_variable = { RUS_poster_right_icon_frame = RUS_propaganda_campaign_to_remove }
			}
			set_variable = { RUS_poster_right_icon_frame = RUS_propaganda_empty_slot_index }
			#Clear aged posters
			clear_variable = RUS_propaganda_right_poster_to_age
			clr_country_flag = RUS_propaganda_right_slot_is_old_flag
		}
		set_variable = { RUS_propaganda_campaign_to_remove = 0 } # Reset var
	}
}

RUS_unlock_propaganda_campaign_slot_effect = {
	hidden_effect = {
		if = {
			limit = {
				check_variable = { RUS_poster_left_icon_frame = RUS_propaganda_locked_slot_index }
			}
			set_variable = { RUS_poster_left_icon_frame = RUS_propaganda_empty_slot_index }
		}
		else_if = {
			limit = {
				check_variable = { RUS_poster_center_icon_frame = RUS_propaganda_locked_slot_index }
			}
			set_variable = { RUS_poster_center_icon_frame = RUS_propaganda_empty_slot_index }
		}
		else = {
			set_variable = { RUS_poster_right_icon_frame = RUS_propaganda_empty_slot_index }
		}
	}
}

RUS_increase_propaganda_campaign_cost_effect = {
	multiply_variable = { RUS_propaganda_cost = RUS_propaganda_cost_increase } #Using generic var RUS_propaganda_cost so that we only need to change this operation to tweak all propagandas' cost escalation
}


#####
##### PARANOIA SYSTEM #####
#####



####
#### INDUSTRIAL STUFF ####
####

RUS_replace_industrial_designer = {
	custom_effect_tooltip = RUS_upgrade_industrial_designer_tt
	if = {
		limit = {
			has_idea = stalingrad_tractor_factory
		}
		swap_ideas = {
			remove_idea = stalingrad_tractor_factory
			add_idea = stalingrad_tractor_factory_improved
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_soviet_railways
		}
		swap_ideas = {
			remove_idea = RUS_soviet_railways
			add_idea = RUS_soviet_railways_improved
		}
	}
}



####
#### FOREIGN POLITICS ####
####

RUS_fortify_mongolian_border_effect = {
	330 = {
		add_building_construction = { #ULAAN BAATAR
			type = bunker
			level = 1
			instant_build = yes
			province = 4801
		}
	}
	if = {
		limit = {
			761 = { #HULUNBUIR
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		819 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 4792
					id = 12557
					id = 1743
				}
			}
		}
		ROOT = { set_country_flag = RUS_mongolian_forts_1_flag }
	}
	if = {
		limit = {
			612 = { #CHAHAR
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = RUS_mongolian_forts_1_flag }
			}
			819 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 12629
						id = 4873
					}
				}
			}
		}
		else = {
			819 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1743
						id = 12629
						id = 4873
					}
				}
			}
		}
		817 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 10575
					id = 4655
				}
			}
		}
		ROOT = { clr_country_flag = RUS_mongolian_forts_1_flag }
		ROOT = { set_country_flag = RUS_mongolian_forts_2_flag }
	}
	if = {
		limit = {
			621 = { #SUIYUAN
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = RUS_mongolian_forts_2_flag }
			}
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1723
						id = 1853
						id = 12539
						id = 10558
					}
				}
			}
		}
		else = {
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 4655
						id = 1723
						id = 1853
						id = 12539
						id = 10558
					}
				}
			}
		}
		ROOT = { clr_country_flag = RUS_mongolian_forts_2_flag }
		ROOT = { set_country_flag = RUS_mongolian_forts_3_flag }
	}
	if = {
		limit = {
			756 = { #JIUQUAN
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = RUS_mongolian_forts_3_flag }
			}
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10689
						id = 4786
						id = 1781
					}
				}
			}
		}
		else = {
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10558
						id = 10689
						id = 4786
						id = 1781
					}
				}
			}
		}
		ROOT = { clr_country_flag = RUS_mongolian_forts_3_flag }
		ROOT = { set_country_flag = RUS_mongolian_forts_4_flag }
	}
	if = {
		limit = {
			760 = { #DABANCHENG
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = RUS_mongolian_forts_4_flag }
			}
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 10560
						id = 1855
					}
				}
			}
		}
		else = {
			817 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 1781
						id = 10560
						id = 1855
					}
				}
			}
		}
		817 = {
			add_building_construction = { #BORDER
				type = bunker
				level = 2
				instant_build = yes
				province = {
					id = 7808
				}
			}
		}
		ROOT = { clr_country_flag = RUS_mongolian_forts_4_flag }
		ROOT = { set_country_flag = RUS_mongolian_forts_5_flag }
	}
	if = {
		limit = {
			618 = { #DZUNGARIA
				controller = {
					RUS_is_threated_by_japan = yes
				}
			}
		}
		if = { #Do not repeat same province twice
			limit = {
				ROOT = { has_country_flag = RUS_mongolian_forts_5_flag }
			}
			818 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 7870
						id = 1774
						id = 10539
						id = 4751
					}
				}
			}
		}
		else = {
			818 = {
				add_building_construction = { #BORDER
					type = bunker
					level = 2
					instant_build = yes
					province = {
						id = 7808
						id = 7870
						id = 1774
						id = 10539
						id = 4751
					}
				}
			}
		}
		ROOT = { clr_country_flag = RUS_mongolian_forts_5_flag }
	}
}

RUS_clear_targeted_relation_modifiers_effect = {
	#log = "Effect Called"
	every_other_country = {
		limit = {
			capital_scope = { is_on_continent = europe }
			BWR = {
				has_relation_modifier = {
					target = PREV
					modifier = RUS_face_western_fascism_static
				}
			}
		}
		#log = "Removing shit in [THIS.GetName]"
		BWR = {
			remove_relation_modifier = {
				target = PREV
				modifier = RUS_face_western_fascism_static
			}
		}
	}
	#log = "------- SPACE -------"
	GER = {
		BWR = {
			remove_relation_modifier = {
				target = PREV
				modifier = RUS_face_western_fascism_static
			}
			#log = "[GER.getname] is now clean"
		}
	}
}

RUS_clear_hidden_targeted_ns_effect = {
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_ENG
		}
		add_ideas = RUS_targeted_bonus_against_ENG
	}
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_FRA
		}
		add_ideas = RUS_targeted_bonus_against_FRA
	}
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_GER
		}
		add_ideas = RUS_targeted_bonus_against_GER
	}
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_ITA
		}
		add_ideas = RUS_targeted_bonus_against_ITA
	}
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_USA
		}
		add_ideas = RUS_targeted_bonus_against_USA
	}
	if = {
		limit = {
			has_idea = RUS_targeted_bonus_against_JAP
		}
		add_ideas = RUS_targeted_bonus_against_JAP
	}
}

RUS_foreign_politics_decision_cost_reduction_effect = { #Add more diplomacy vars here to divide and round them
	divide_variable = { RUS_pressure_country_government_cost = 2 }
	divide_variable = { RUS_promote_ideology_rallies_cost = 2 }
	divide_variable = { RUS_send_ultimatum_to_country_cost = 2 }
	divide_variable = { RUS_send_infantry_equipment_cost = 2 }
	divide_variable = { RUS_peace_deal_cost = 2 }
	divide_variable = { RUS_sinkiang_proposal_cost = 2 }

	round_variable = RUS_pressure_country_government_cost
	round_variable = RUS_promote_ideology_rallies_cost
	round_variable = RUS_send_ultimatum_to_country_cost
	round_variable = RUS_send_infantry_equipment_cost
	round_variable = RUS_peace_deal_cost
	round_variable = RUS_sinkiang_proposal_cost
}

RUS_approach_sinkiang_diplomacy_effect = {
	add_ai_strategy = {
		type = befriend
		id = SIK			
		value = 15
	}
	add_ai_strategy = {
		type = alliance
		id = SIK		
		value = 15
	}
	SIK = {
		add_ai_strategy = {
			type = befriend
			id = BWR			
			value = 10
		}
		add_ai_strategy = {
			type = alliance
			id = CHI		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = PRC		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = XSM		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = SHX		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = YUN		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = GXC		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = MEN		
			value = -5
		}
		add_ai_strategy = {
			type = alliance
			id = MAN		
			value = -5
		}
	}
}

RUS_set_appropriate_national_academy_of_sciences_flag_effect = {
	#log = "ROOT is [ROOT.GetName]"
	#log = "FROM is [FROM.GetName]"
	if = {
		limit = {
			FROM = { tag = BLR }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_BLR_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = UKR }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_UKR_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = KAZ }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_KAZ_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = GEO }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_GEO_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = ARM }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_ARM_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = AZR }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_AZR_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = UZB }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_UZB_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = TMS }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_TMS_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = KYR }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_KYR_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = TAJ }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_TAJ_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = TAN }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_TAN_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = DON }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_DON_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = KUB }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_KUB_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = EST }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_EST_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = LAT }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_LAT_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = LIT }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_LIT_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = POL }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_POL_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = FIN }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_FIN_flag }
	}
	else_if = {
		limit = {
			FROM = { tag = MON }
		}
		ROOT = { set_country_flag = RUS_national_academy_of_sciences_built_MON_flag }
	}

	# Add any new cosmetics/releasables here! (and also decisions for them) ((and also scripted triggers)) (((please just do not add any more cosmetics/releasables...)))
}

RUS_build_national_academy_of_sciences_effect = {
	if = {
		limit = {
			country_exists = FROM
		}
		custom_effect_tooltip = RUS_national_academy_of_sciences_construction_independent_tt
	}
	else = {
		custom_effect_tooltip = RUS_national_academy_of_sciences_construction_integrated_tt
	}
	ROOT = {
		custom_effect_tooltip = RUS_national_academy_of_sciences_research_tt
		add_to_variable = { RUS_academy_of_sciences_research_speed_factor = RUS_national_academy_of_sciences_research_increase }
	}
}


RUS_clear_hostile_diplomacy_in_both_countries = { #It assumes you want to clear claims and wargoals against each other in both ROOT and FROM
	#First clear ROOT
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = FROM
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = FROM
			}
			remove_claim_by = FROM
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = ROOT }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}

	#Now clear FROM
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = FROM
		}
		remove_wargoal = {
			type = all
			target = FROM
		}
	}
}

RUS_clear_hostile_diplomacy_in_all_three_countries = { #It assumes you want to clear claims and wargoals against each other in ROOT, FROM and POL
	#First clear ROOT
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = FROM
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = FROM
			}
			remove_claim_by = FROM
		}
	}
	if = {
		limit = {
			any_owned_state = {
				is_claimed_by = POL
			}
		}
		every_owned_state = {
			limit = {
				is_claimed_by = POL
			}
			remove_claim_by = POL
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = ROOT }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}
	if = {
		limit = {
			POL = { has_wargoal_against = ROOT }
		}
		POL = {
			remove_wargoal = {
				type = all
				target = ROOT
			}
		}
	}

	#Now clear FROM
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			FROM = {
				any_owned_state = {
					is_claimed_by = POL
				}
			}
		}
		FROM = {
			every_owned_state = {
				limit = {
					is_claimed_by = POL
				}
				remove_claim_by = POL
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = FROM
		}
		remove_wargoal = {
			type = all
			target = FROM
		}
	}
	if = {
		limit = {
			POL = { has_wargoal_against = FROM }
		}
		POL = {
			remove_wargoal = {
				type = all
				target = FROM
			}
		}
	}

	#Finally, clear POL
	if = {
		limit = {
			POL = {
				any_owned_state = {
					is_claimed_by = ROOT
				}
			}
		}
		POL = {
			every_owned_state = {
				limit = {
					is_claimed_by = ROOT
				}
				remove_claim_by = ROOT
			}
		}
	}
	if = {
		limit = {
			POL = {
				any_owned_state = {
					is_claimed_by = FROM
				}
			}
		}
		POL = {
			every_owned_state = {
				limit = {
					is_claimed_by = FROM
				}
				remove_claim_by = FROM
			}
		}
	}
	if = {
		limit = {
			has_wargoal_against = POL
		}
		remove_wargoal = {
			type = all
			target = POL
		}
	}
	if = {
		limit = {
			FROM = { has_wargoal_against = POL }
		}
		FROM = {
			remove_wargoal = {
				type = all
				target = POL
			}
		}
	}
}

RUS_apply_collective_ageement_on_mutual_assistance_effects_basic = {
	RUS_clear_hostile_diplomacy_in_both_countries = yes #Clears wargoals and claims

	#FRA -> BWR
	FROM = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = RUS_policies_of_collective_security_opinion
		}
	}

	#BWR -> FRA
	diplomatic_relation = {
		country = FROM
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = FROM
	add_opinion_modifier = {
		target = FROM
		modifier = RUS_policies_of_collective_security_opinion
	}
}


RUS_apply_collective_ageement_on_mutual_assistance_effects_poland_included = {
	RUS_clear_hostile_diplomacy_in_all_three_countries = yes #Clears wargoals and claims in all three countries

	#BWR -> FRA
	diplomatic_relation = {
		country = FROM
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = FROM
	add_opinion_modifier = {
		target = FROM
		modifier = RUS_policies_of_collective_security_opinion
	}

	#BWR -> POL
	diplomatic_relation = {
		country = POL
		relation = non_aggression_pact
		active = yes
	}
	give_guarantee = POL
	add_opinion_modifier = {
		target = POL
		modifier = RUS_policies_of_collective_security_opinion
	}

	#FRA -> BWR
	FROM = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = RUS_policies_of_collective_security_opinion
		}
	}

	#FRA -> POL
	FROM = {
		diplomatic_relation = {
			country = POL
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = POL
		add_opinion_modifier = {
			target = POL
			modifier = RUS_policies_of_collective_security_opinion
		}
	}

	#POL -> BWR
	POL = {
		diplomatic_relation = {
			country = ROOT
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = ROOT
		add_opinion_modifier = {
			target = ROOT
			modifier = RUS_policies_of_collective_security_opinion
		}
	}

	#POL -> FRA
	POL = {
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
			active = yes
		}
		give_guarantee = FROM
		add_opinion_modifier = {
			target = FROM
			modifier = RUS_policies_of_collective_security_opinion
		}
	}
}

RUS_set_military_offensive_effect = {
	set_country_flag = RUS_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = RUS_military_offensive_states
		add_dynamic_modifier = {
			modifier = RUS_soviet_military_offensive
			days = 90
			scope = BWR
		}
	}
}

RUS_clean_military_offensive_effect = {
	clr_country_flag = RUS_military_offensive_in_progress_flag
	for_each_scope_loop = {
		array = RUS_military_offensive_states
		remove_dynamic_modifier = { modifier = RUS_soviet_military_offensive }
	}
	clear_array = RUS_military_offensive_states
	clear_variable = RUS_offensive_main_objective
}

RUS_spawn_penal_divisions_effect = {
	hidden_effect = {
		capital_scope = {
			create_unit = {
				division = "division_template = \"Shtrafnaya Chast\" start_experience_factor = 0.5 start_equipment_factor = 1.0"
				owner = ROOT
				count = 4
			}
		}
		set_country_flag = RUS_penal_units_raised_flag
	}
}

RUS_anglo_soviet_invasion_add_ai_strategies_effect = { #Soviet / Anglo-Soviet invasion of Iran
	if = {
		limit = {
			has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
		}
		BWR = {
			add_ai_strategy = {
				type = befriend
				id = ENG			
				value = 15
			}
		}
		ENG = {
			add_ai_strategy = {
				type = befriend
				id = BWR			
				value = 15
			}
		}
	}
	else = {
		BWR = {
			add_ai_strategy = {
				type = befriend
				id = ENG			
				value = -15
			}
		}
		ENG = {
			add_ai_strategy = {
				type = befriend
				id = BWR			
				value = -15
			}
		}
	}
	if = {
		limit = {
			PER = {
				is_in_faction = no
			}
		}
		PER = {
			add_timed_idea = {
				idea = RUS_shocked_by_surprise_attack
				days = var:BWR.RUS_operation_countenance_mission_days
			}
		}
	}
}

RUS_failed_anglo_soviet_invasion_ai_strategies_effect = {
	if = { #IF ENG is not involved, seek British aid
		limit = {
			NOT = { has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag }
		}
		if = {
			limit = {
				country_exists = ENG
				NOT = { has_war_with = ENG }
				ENG = {
					is_faction_leader = yes
					NOT = {	is_in_faction_with = BWR }
				}
			}
			add_ai_strategy = {
				type = alliance
				id = ENG		
				value = 200
			}
			ENG = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
	}
	else = {
		if = {
			limit = {
				country_exists = GER
				NOT = { has_war_with = GER }
				GER = {
					is_faction_leader = yes
					NOT = {
						is_in_faction_with = BWR
						AND = {
							has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
							is_in_faction_with = ENG
						}
					}
				}
			}
			add_ai_strategy = {
				type = alliance
				id = GER		
				value = 200
			}
			GER = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
		else_if = {
			limit = {
				country_exists = ITA
				NOT = { has_war_with = ITA }
				ITA = {
					is_faction_leader = yes
					NOT = {
						is_in_faction_with = BWR
						AND = {
							has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
							is_in_faction_with = ENG
						}
					}
				}
			}
			add_ai_strategy = {
				type = alliance
				id = ITA		
				value = 200
			}
			ITA = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
		else_if = {
			limit = {
				country_exists = JAP
				NOT = { has_war_with = JAP }
				JAP = {
					is_faction_leader = yes
					NOT = {
						is_in_faction_with = BWR
						AND = {
							has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
							is_in_faction_with = ENG
						}
					}
				}
			}
			add_ai_strategy = {
				type = alliance
				id = JAP		
				value = 200
			}
			JAP = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
		else_if = {
			limit = {
				country_exists = FRA
				NOT = { has_war_with = FRA }
				FRA = {
					is_faction_leader = yes
					NOT = {
						is_in_faction_with = BWR
						AND = {
							has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
							is_in_faction_with = ENG
						}
					}
				}
			}
			add_ai_strategy = {
				type = alliance
				id = FRA		
				value = 200
			}
			FRA = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
		else_if = {
			limit = {
				country_exists = USA
				NOT = { has_war_with = USA }
				USA = {
					is_faction_leader = yes
					NOT = {
						is_in_faction_with = BWR
						AND = {
							has_global_flag = RUS_agreed_anglo_soviet_invasion_of_iran_flag
							is_in_faction_with = ENG
						}
					}
				}
			}
			add_ai_strategy = {
				type = alliance
				id = USA		
				value = 200
			}
			USA = {
				add_ai_strategy = {
					type = alliance
					id = PER		
					value = 25
				}
			}
		}
	}
}

RUS_manage_spanish_generals_exiled_in_ussr_effect = {
	#log = "FROM is [FROM.GetName] // ROOT is [ROOT.GetName]" #Debug
	#Exiled SPD/SPC Generals
	if = { #Líster
		limit = {
			ROOT = { tag = SPD }
			BWR = {
				has_country_flag = RUS_spanish_refugee_generals_welcome_flag
				has_completed_focus = RUS_the_centre
			}
		}
		ROOT = { SPR_enrique_lister = { set_nationality = BWR } }
		BWR = {
			SPR_enrique_lister = {
				set_variable = { BWR.RUS_spanish_general = THIS }
				#log = "Líster is [?BWR.RUS_spanish_general.GetName]" #Debug
				#Líster joins the USSR as a Stalinist
				if = {
					limit = {
						has_trait = trait_SPR_anti_stalinist_loyalties
					}
					remove_unit_leader_trait = trait_SPR_anti_stalinist_loyalties
				}
				if = {
					limit = {
						has_trait = trait_SPR_republican_loyalties
					}
					remove_unit_leader_trait = trait_SPR_republican_loyalties
				}
				if = {
					limit = {
						NOT = { has_trait = trait_SPR_stalinist_loyalties }
					}
					add_unit_leader_trait = trait_SPR_stalinist_loyalties
				}
			}
			set_country_flag = RUS_go_go_general_flag
		}
	}
	else_if = { #El Campesino
		limit = {
			ROOT = { tag = SPD }
			BWR = {
				has_country_flag = RUS_spanish_refugee_generals_welcome_flag
				OR = {
					has_completed_focus = RUS_the_left_opposition
					AND = {
						has_completed_focus = RUS_the_right_opposition
						NOT = { has_completed_focus = RUS_covert_support_for_spanish_poum }
					}
				}
			}
		}
		ROOT = { SPR_valentin_gonzalez = { set_nationality = BWR } }
		BWR = {
			SPR_valentin_gonzalez = {
				set_variable = { BWR.RUS_spanish_general = THIS }
				#El Campesino joins the USSR as an Anti-Stalinist
				if = {
					limit = {
						has_trait = trait_SPR_republican_loyalties
					}
					remove_unit_leader_trait = trait_SPR_republican_loyalties
				}
				if = {
					limit = {
						has_trait = trait_SPR_stalinist_loyalties
					}
					remove_unit_leader_trait = trait_SPR_stalinist_loyalties
				}
				if = {
					limit = {
						NOT = { has_trait = trait_SPR_anti_stalinist_loyalties }
					}
					add_unit_leader_trait = trait_SPR_anti_stalinist_loyalties
				}
			}
			set_country_flag = RUS_go_go_general_flag
		}
	}
	else_if = { #José Rovira
		limit = {
			ROOT = { tag = SPC }
			BWR = {
				has_country_flag = RUS_spanish_refugee_generals_welcome_flag
				has_completed_focus = RUS_covert_support_for_spanish_poum
			}
		}
		ROOT = { SPR_jose_rovira = { set_nationality = BWR } }
		BWR = {
			SPR_jose_rovira = {
				set_variable = { BWR.RUS_spanish_general = THIS }
				#Rovira joins the USSR as an Anti-Stalinist
				if = {
					limit = {
						has_trait = trait_SPR_republican_loyalties
					}
					remove_unit_leader_trait = trait_SPR_republican_loyalties
				}
				if = {
					limit = {
						has_trait = trait_SPR_stalinist_loyalties
					}
					remove_unit_leader_trait = trait_SPR_stalinist_loyalties
				}
				if = {
					limit = {
						NOT = { has_trait = trait_SPR_anti_stalinist_loyalties }
					}
					add_unit_leader_trait = trait_SPR_anti_stalinist_loyalties
				}
			}
			set_country_flag = RUS_go_go_general_flag
		}
	}
	if = {
		limit = {
			BWR = { has_country_flag = RUS_go_go_general_flag }
		}
		var:BWR.RUS_spanish_general = {
			#log = "I am [THIS.GetName]" #Debug
			if = { # Won't be a marshal in the USSR
				limit = {
					is_field_marshal = yes
				}
				demote_leader = yes
			}
			if = { # Won't be an advisor in the USSR
				limit = {
					is_advisor = yes
				}
				if = {
					limit = {
						is_character_slot = theorist
					}
					remove_advisor_role = { slot = theorist } 
				}
				else_if = {
					limit = {
						is_character_slot = army_chief
					}
					remove_advisor_role = { slot = army_chief } 
				}
				if = {
					limit = {
						is_character_slot = high_command
					}
					remove_advisor_role = { slot = high_command } 
				}
			}
			unit_leader_event = { id = NSB_soviet_spanish_civil_war.1 days = 5 random_days = 2 }
		}
		BWR = { clr_country_flag = RUS_spanish_refugee_generals_welcome_flag }
	}
}

#POUM brigades come to aid in the Soviet Civil War
RUS_poum_brigades_to_soviet_civil_war_effect = {

	add_equipment_to_stockpile = {
		type = infantry_equipment
		amount = 6000
		producer = SPC
	}
	add_equipment_to_stockpile = {
		type = support_equipment
		amount = 600
		producer = SPC
	}

	division_template = {
		name = "International Marxist Brigades"
		is_locked = yes
		priority = 1
		template_counter = 14
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
		}
	}

	division_template = {
		name = "POUM Special Brigades"
		is_locked = yes
		priority = 1
		template_counter = 02
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
			infantry = { x = 1 y = 2 }
		}
		support = {
			engineer = { x = 0 y = 0 }
			recon = { x = 0 y = 1 }
			artillery = { x = 0 y = 2 }
			anti_tank = { x = 0 y = 3 }
		}
	}

	division_template = {
		name = "Brigada de las Juventudes del POUM"
		template_counter = 0
		division_names_group = SPD_INF_02
		is_locked = yes
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
		support = {
			engineer = { x = 0 y = 0 }
		}
	}

	var:RUS_civil_war_start_state = {
		create_unit = { #Int Marxist Brigades
			division = "name = \"International Marxist Brigade\" division_template = \"International Marxist Brigades\" start_experience_factor = 0.7 start_equipment_factor = 1.0" owner = BWR count = 12
		}
		create_unit = { #POUM Special Brigades
			division = "name = \"POUM Special Brigade\" division_template = \"POUM Special Brigades\" start_experience_factor = 1 start_equipment_factor = 1.0" owner = BWR count = 2
		}
		create_unit = { #Juventudes Sindicales
			division = "name = \"Brigada de las Juventudes del POUM\" division_template = \"Brigada de las Juventudes del POUM\" start_experience_factor = 0.6 start_equipment_factor = 1.0" owner = BWR count = 6
		}
	}

}

RUS_damage_relocated_military_factories_effect = {
	if = {
		limit = {
			FROM = {
				NOT = { is_fully_controlled_by = ROOT }
			}
		}
		damage_building = { type = arms_factory damage = 0.9 }
	}
	else = {
		damage_building = { type = arms_factory damage = 0.5 }
	}
}

RUS_damage_relocated_civilian_factories_effect = {
	if = {
		limit = {
			FROM = {
				NOT = { is_fully_controlled_by = ROOT }
			}
		}
		damage_building = { type = industrial_complex damage = 0.9 }
	}
	else = {
		damage_building = { type = industrial_complex damage = 0.5 }
	}
}

#RELOCATE INDUSTRY - ROOT = TAG // FROM = TARGETED STATE (to remove industry) // THIS = TARGETED STATE (to remove industry) [Effect assumed to be called inside FROM scope]
RUS_relocate_industry_in_appropriate_state_effect = {
	if = {
		limit = {
			OR = {
				has_state_flag = RUS_civs_removed_flag
				has_state_flag = RUS_mils_removed_flag
			}
		}
		ROOT = {
			if = { #Prio the Urals
				limit = {
					any_controlled_state = {
						RUS_is_industrial_relocation_destiny_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						RUS_is_industrial_relocation_destiny_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY - Prio Mil
					if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY - Prio Civ
					if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
				}
			}
			else_if = { #A bunch of historical fallbacks
				limit = {
					any_controlled_state = {
						RUS_is_industrial_relocation_destiny_fallback_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						RUS_is_industrial_relocation_destiny_fallback_state = yes
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
				}
			}
			else_if = { #what the hell man? Your country is in flames you know?
				limit = {
					any_controlled_state = {
						RUS_is_industrial_relocation_destiny_state = no
						RUS_is_industrial_relocation_destiny_fallback_state = no
						is_on_continent = asia
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
				}
				random_controlled_state = {
					limit = {
						RUS_is_industrial_relocation_destiny_state = no
						RUS_is_industrial_relocation_destiny_fallback_state = no
						is_on_continent = asia
						free_building_slots = {
							building = arms_factory
							size > 1
							include_locked = yes
						}
					}
					#FIRST FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
					#SECOND FACTORY
					if = {
						limit = {
							FROM = { has_state_flag = RUS_mils_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = arms_factory
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_mils_removed_flag value = -1 } }
						RUS_damage_relocated_military_factories_effect = yes
					}
					else_if = {
						limit = {
							FROM = { has_state_flag = RUS_civs_removed_flag }
						}
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
						FROM = { modify_state_flag = { flag = RUS_civs_removed_flag value = -1 } }
						RUS_damage_relocated_civilian_factories_effect = yes
					}
				}
			}
		}
	}
}

RUS_kill_trotsky_effect = { # Poor bwoy D: -> ROOT = BWR (or it doesn't work! :D)
	#log = "ROOT is [ROOT.GetName] // THIS is [THIS.GetName] // FROM is [FROM.GetName]" -> Everything is BWR but retire_character tooltip keeps saying "Retire char from [nothing]"
	set_global_flag = flag_trotsky_dead
	if = {
		limit = {
			has_idea = trotskyite_plot_nsb
		}
		swap_ideas = {
			remove_idea = trotskyite_plot_nsb
			add_idea = trotskyite_plot_purged
		}
	}
	RUS_lev_trotsky = {
		set_character_flag = RUS_character_purged_flag
		retire = yes
	}
	set_variable = { BWR.RUS_paranoia_photo_trotsky = 11 }
	MEX = {
		if = {
			limit = {
				has_country_leader = {
					character = MEX_leon_trotsky
				}
			}
			retire_ideology_leader = communism 
		}
		#retire_character = MEX_leon_trotsky #Mexico did show Trotsky as an unavailable advisor after being killed

		#THIS BELOW IS WHAT IS SCRIPTED TO HAPPEN IF TROTSKY RETURNS TO THE USSR TO RULE THERE
		#if = {
		#	limit = {
		#		has_country_leader = { character = MEX_leon_trotsky }
		#	}
		#	add_country_leader_role = {
		#		character = MEX_hernan_laborde
		#		country_leader = {
		#			expire = "1965.1.1"
		#			ideology = leninism
		#			traits = {
		#				devoted_trotskyist
		#			}
		#		}
		#		promote_leader = yes
		#	}
		#}
	}
}


########    ###    ##    ## ##    ##    ########  ########  ######  ####  ######   ##    ## ######## ########
   ##      ## ##   ###   ## ##   ##     ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
   ##     ##   ##  ####  ## ##  ##      ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
   ##    ##     ## ## ## ## #####       ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
   ##    ######### ##  #### ##  ##      ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
   ##    ##     ## ##   ### ##   ##     ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
   ##    ##     ## ##    ## ##    ##    ########  ########  ######  ####  ######   ##    ## ######## ##     ##


 #######                                #
    #       ##    #    #  #    #       ##
    #      #  #   ##   #  #   #       # #
    #     #    #  # #  #  ####          #
    #     ######  #  # #  #  #          #
    #     #    #  #   ##  #   #         #
    #     #    #  #    #  #    #      #####

#Why do I do this to myself?! D:
RUS_upgrade_appropriate_tank_designer_1_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = RUS_morozov_design_bureau
		}
		set_country_flag = RUS_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau
			add_idea = RUS_morozov_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_2
		}
		set_country_flag = RUS_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_2
			add_idea = RUS_morozov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_3
		}
		set_country_flag = RUS_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_3
			add_idea = RUS_morozov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_2_3
		}
		set_country_flag = RUS_merge_tank_morozov_1_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_2_3
			add_idea = RUS_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau
		}
		set_country_flag = RUS_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau
			add_idea = RUS_astrov_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_2
		}
		set_country_flag = RUS_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_2
			add_idea = RUS_astrov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_3
		}
		set_country_flag = RUS_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_3
			add_idea = RUS_astrov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_2_3
		}
		set_country_flag = RUS_merge_tank_astrov_1_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_2_3
			add_idea = RUS_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = RUS_okmo
		}
		set_country_flag = RUS_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = RUS_okmo
			add_idea = RUS_okmo_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_2
		}
		set_country_flag = RUS_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = RUS_okmo_2
			add_idea = RUS_okmo_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_3
		}
		set_country_flag = RUS_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = RUS_okmo_3
			add_idea = RUS_okmo_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_2_3
		}
		set_country_flag = RUS_merge_tank_okmo_1_flag
		swap_ideas = {
			remove_idea = RUS_okmo_2_3
			add_idea = RUS_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant
		}
		set_country_flag = RUS_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant
			add_idea = RUS_mytishchy_machine_building_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_2
		}
		set_country_flag = RUS_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_2
			add_idea = RUS_mytishchy_machine_building_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_3
		}
		set_country_flag = RUS_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_3
			add_idea = RUS_mytishchy_machine_building_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_2_3
		}
		set_country_flag = RUS_merge_tank_mytishchy_1_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_2_3
			add_idea = RUS_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = RUS_kirov
		}
		set_country_flag = RUS_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = RUS_kirov
			add_idea = RUS_kirov_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_2
		}
		set_country_flag = RUS_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = RUS_kirov_2
			add_idea = RUS_kirov_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_3
		}
		set_country_flag = RUS_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = RUS_kirov_3
			add_idea = RUS_kirov_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_2_3
		}
		set_country_flag = RUS_merge_tank_kirov_1_flag
		swap_ideas = {
			remove_idea = RUS_kirov_2_3
			add_idea = RUS_kirov_final
		}
	}
}

 #######                               #####
    #       ##    #    #  #    #      #     #
    #      #  #   ##   #  #   #             #
    #     #    #  # #  #  ####         #####
    #     ######  #  # #  #  #        #
    #     #    #  #   ##  #   #       #
    #     #    #  #    #  #    #      #######


RUS_upgrade_appropriate_tank_designer_2_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = RUS_morozov_design_bureau
		}
		set_country_flag = RUS_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau
			add_idea = RUS_morozov_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_1
		}
		set_country_flag = RUS_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_1
			add_idea = RUS_morozov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_3
		}
		set_country_flag = RUS_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_3
			add_idea = RUS_morozov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_1_3
		}
		set_country_flag = RUS_merge_tank_morozov_2_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_1_3
			add_idea = RUS_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau
		}
		set_country_flag = RUS_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau
			add_idea = RUS_astrov_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_1
		}
		set_country_flag = RUS_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_1
			add_idea = RUS_astrov_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_3
		}
		set_country_flag = RUS_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_3
			add_idea = RUS_astrov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_1_3
		}
		set_country_flag = RUS_merge_tank_astrov_2_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_1_3
			add_idea = RUS_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = RUS_okmo
		}
		set_country_flag = RUS_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = RUS_okmo
			add_idea = RUS_okmo_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_1
		}
		set_country_flag = RUS_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = RUS_okmo_1
			add_idea = RUS_okmo_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_3
		}
		set_country_flag = RUS_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = RUS_okmo_3
			add_idea = RUS_okmo_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_1_3
		}
		set_country_flag = RUS_merge_tank_okmo_2_flag
		swap_ideas = {
			remove_idea = RUS_okmo_1_3
			add_idea = RUS_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant
		}
		set_country_flag = RUS_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant
			add_idea = RUS_mytishchy_machine_building_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_1
		}
		set_country_flag = RUS_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_1
			add_idea = RUS_mytishchy_machine_building_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_3
		}
		set_country_flag = RUS_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_3
			add_idea = RUS_mytishchy_machine_building_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_1_3
		}
		set_country_flag = RUS_merge_tank_mytishchy_2_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_1_3
			add_idea = RUS_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = RUS_kirov
		}
		set_country_flag = RUS_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = RUS_kirov
			add_idea = RUS_kirov_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_1
		}
		set_country_flag = RUS_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = RUS_kirov_1
			add_idea = RUS_kirov_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_3
		}
		set_country_flag = RUS_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = RUS_kirov_3
			add_idea = RUS_kirov_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_1_3
		}
		set_country_flag = RUS_merge_tank_kirov_2_flag
		swap_ideas = {
			remove_idea = RUS_kirov_1_3
			add_idea = RUS_kirov_final
		}
	}
}

 #######                               #####
    #       ##    #    #  #    #      #     #
    #      #  #   ##   #  #   #             #
    #     #    #  # #  #  ####         #####
    #     ######  #  # #  #  #              #
    #     #    #  #   ##  #   #       #     #
    #     #    #  #    #  #    #       #####


RUS_upgrade_appropriate_tank_designer_3_effect = {
	#MOROZOV
	if = {
		limit = {
			has_idea = RUS_morozov_design_bureau
		}
		set_country_flag = RUS_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau
			add_idea = RUS_morozov_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_1
		}
		set_country_flag = RUS_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_1
			add_idea = RUS_morozov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_2
		}
		set_country_flag = RUS_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_2
			add_idea = RUS_morozov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_morozov_design_bureau_1_2
		}
		set_country_flag = RUS_merge_tank_morozov_3_flag
		swap_ideas = {
			remove_idea = RUS_morozov_design_bureau_1_2
			add_idea = RUS_morozov_design_bureau_final
		}
	}

	#ASTROV
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau
		}
		set_country_flag = RUS_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau
			add_idea = RUS_astrov_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_1
		}
		set_country_flag = RUS_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_1
			add_idea = RUS_astrov_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_2
		}
		set_country_flag = RUS_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_2
			add_idea = RUS_astrov_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_astrov_design_bureau_1_2
		}
		set_country_flag = RUS_merge_tank_astrov_3_flag
		swap_ideas = {
			remove_idea = RUS_astrov_design_bureau_1_2
			add_idea = RUS_astrov_design_bureau_final
		}
	}

	#OKMO
	else_if = {
		limit = {
			has_idea = RUS_okmo
		}
		set_country_flag = RUS_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = RUS_okmo
			add_idea = RUS_okmo_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_1
		}
		set_country_flag = RUS_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = RUS_okmo_1
			add_idea = RUS_okmo_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_2
		}
		set_country_flag = RUS_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = RUS_okmo_2
			add_idea = RUS_okmo_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_okmo_1_2
		}
		set_country_flag = RUS_merge_tank_okmo_3_flag
		swap_ideas = {
			remove_idea = RUS_okmo_1_2
			add_idea = RUS_okmo_final
		}
	}

	#mytishchy
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant
		}
		set_country_flag = RUS_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant
			add_idea = RUS_mytishchy_machine_building_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_1
		}
		set_country_flag = RUS_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_1
			add_idea = RUS_mytishchy_machine_building_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_2
		}
		set_country_flag = RUS_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_2
			add_idea = RUS_mytishchy_machine_building_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mytishchy_machine_building_plant_1_2
		}
		set_country_flag = RUS_merge_tank_mytishchy_3_flag
		swap_ideas = {
			remove_idea = RUS_mytishchy_machine_building_plant_1_2
			add_idea = RUS_mytishchy_machine_building_plant_final
		}
	}

	#KIROV
	else_if = {
		limit = {
			has_idea = RUS_kirov
		}
		set_country_flag = RUS_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = RUS_kirov
			add_idea = RUS_kirov_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_1
		}
		set_country_flag = RUS_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = RUS_kirov_1
			add_idea = RUS_kirov_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_2
		}
		set_country_flag = RUS_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = RUS_kirov_2
			add_idea = RUS_kirov_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_kirov_1_2
		}
		set_country_flag = RUS_merge_tank_kirov_3_flag
		swap_ideas = {
			remove_idea = RUS_kirov_1_2
			add_idea = RUS_kirov_final
		}
	}
}


##    ##    ###    ##     ##    ###    ##          ########  ########  ######  ####  ######   ##    ## ######## ########
###   ##   ## ##   ##     ##   ## ##   ##          ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
####  ##  ##   ##  ##     ##  ##   ##  ##          ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
## ## ## ##     ## ##     ## ##     ## ##          ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
##  #### #########  ##   ##  ######### ##          ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##   ### ##     ##   ## ##   ##     ## ##          ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##    ## ##     ##    ###    ##     ## ########    ########  ########  ######  ####  ######   ##    ## ######## ##     ##

 #     #                                        #        ######
 ##    #    ##    #    #    ##    #            ##        #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #           # #        #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #             #        ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #             #        #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #             #        #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######      #####      ######   #    #  ######    #    #   ####


RUS_upgrade_appropriate_ship_designer_1_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau
			add_idea = RUS_nevskoye_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_2
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_2
			add_idea = RUS_nevskoye_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_3
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_3
			add_idea = RUS_nevskoye_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_4
			add_idea = RUS_nevskoye_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_2_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_2_4
			add_idea = RUS_nevskoye_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_3_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_3_4
			add_idea = RUS_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau
			add_idea = RUS_rubin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_2
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_2
			add_idea = RUS_rubin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_3
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_3
			add_idea = RUS_rubin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_4
			add_idea = RUS_rubin_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_2_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_2_4
			add_idea = RUS_rubin_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_3_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_1_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_3_4
			add_idea = RUS_rubin_design_bureau_final_3
		}
	}
}

 #     #                                       #####       ######
 ##    #    ##    #    #    ##    #           #     #      #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #                 #      #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #           #            #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #           #            #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######      #######      ######   #    #  ######    #    #   ####


RUS_upgrade_appropriate_ship_designer_2_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau
			add_idea = RUS_nevskoye_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1
			add_idea = RUS_nevskoye_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_4
			add_idea = RUS_nevskoye_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1_4
			add_idea = RUS_nevskoye_design_bureau_final_2
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau
			add_idea = RUS_rubin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1
			add_idea = RUS_rubin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_4
			add_idea = RUS_rubin_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_2_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1_4
			add_idea = RUS_rubin_design_bureau_final_2
		}
	}
}

 #     #                                       #####       ######
 ##    #    ##    #    #    ##    #           #     #      #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #                 #      #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #                 #      #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #           #     #      #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######       #####       ######   #    #  ######    #    #   ####

RUS_upgrade_appropriate_ship_designer_3_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau
			add_idea = RUS_nevskoye_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1
			add_idea = RUS_nevskoye_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_4
			add_idea = RUS_nevskoye_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1_4
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1_4
			add_idea = RUS_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau
			add_idea = RUS_rubin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1
			add_idea = RUS_rubin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_4
			add_idea = RUS_rubin_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1_4
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_3_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1_4
			add_idea = RUS_rubin_design_bureau_final_3
		}
	}
}

 #     #                                      #            ######
 ##    #    ##    #    #    ##    #           #    #       #     #    ##    #       #####  #   ####
 # #   #   #  #   #    #   #  #   #           #    #       #     #   #  #   #         #    #  #    #
 #  #  #  #    #  #    #  #    #  #           #    #       ######   #    #  #         #    #  #
 #   # #  ######  #    #  ######  #           #######      #     #  ######  #         #    #  #
 #    ##  #    #   #  #   #    #  #                #       #     #  #    #  #         #    #  #    #
 #     #  #    #    ##    #    #  ######           #       ######   #    #  ######    #    #   ####


RUS_upgrade_appropriate_ship_designer_4_baltic_effect = {
	#NEVSKOYE DESIGN BUREAU
	if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau
			add_idea = RUS_nevskoye_design_bureau_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1
			add_idea = RUS_nevskoye_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_2
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_2
			add_idea = RUS_nevskoye_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_3
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_3
			add_idea = RUS_nevskoye_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1_2
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1_2
			add_idea = RUS_nevskoye_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_nevskoye_design_bureau_1_3
		}
		set_country_flag = RUS_merge_ship_nevskoye_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_nevskoye_design_bureau_1_3
			add_idea = RUS_nevskoye_design_bureau_final_3
		}
	}

	#RUBIN DESIGN BUREAU
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau
			add_idea = RUS_rubin_design_bureau_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1
			add_idea = RUS_rubin_design_bureau_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_2
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_2
			add_idea = RUS_rubin_design_bureau_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_3
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_3
			add_idea = RUS_rubin_design_bureau_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1_2
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1_2
			add_idea = RUS_rubin_design_bureau_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_rubin_design_bureau_1_3
		}
		set_country_flag = RUS_merge_ship_rubin_design_bureau_4_flag
		swap_ideas = {
			remove_idea = RUS_rubin_design_bureau_1_3
			add_idea = RUS_rubin_design_bureau_final_3
		}
	}
}

 #     #                                        #        ######                                        #####
 ##    #    ##    #    #    ##    #            ##        #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #           # #        #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #             #        ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #             #        #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #             #        #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######      #####      ######   ######  #    #   ####   #    #       #####   ######  #    #


RUS_upgrade_appropriate_ship_designer_1_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = RUS_black_sea_shipyard
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard
			add_idea = RUS_black_sea_shipyard_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_2
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_2
			add_idea = RUS_black_sea_shipyard_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_3
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_3
			add_idea = RUS_black_sea_shipyard_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_4
			add_idea = RUS_black_sea_shipyard_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_2_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_2_4
			add_idea = RUS_black_sea_shipyard_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_3_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_1_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_3_4
			add_idea = RUS_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant
			add_idea = RUS_sevastopol_marine_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_2
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_2
			add_idea = RUS_sevastopol_marine_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_3
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_3
			add_idea = RUS_sevastopol_marine_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_4
			add_idea = RUS_sevastopol_marine_plant_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_2_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_2_4
			add_idea = RUS_sevastopol_marine_plant_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_3_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_1_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_3_4
			add_idea = RUS_sevastopol_marine_plant_final_3
		}
	}
}

 #     #                                       #####       ######                                        #####
 ##    #    ##    #    #    ##    #           #     #      #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #                 #      #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #           #            #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #           #            #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######      #######      ######   ######  #    #   ####   #    #       #####   ######  #    #


RUS_upgrade_appropriate_ship_designer_2_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = RUS_black_sea_shipyard
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard
			add_idea = RUS_black_sea_shipyard_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1
			add_idea = RUS_black_sea_shipyard_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_4
			add_idea = RUS_black_sea_shipyard_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_2_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1_4
			add_idea = RUS_black_sea_shipyard_final_2
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant
			add_idea = RUS_sevastopol_marine_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1
			add_idea = RUS_sevastopol_marine_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_4
			add_idea = RUS_sevastopol_marine_plant_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_2_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1_4
			add_idea = RUS_sevastopol_marine_plant_final_2
		}
	}
}

 #     #                                       #####       ######                                        #####
 ##    #    ##    #    #    ##    #           #     #      #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #                 #      #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #            #####       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #                 #      #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #           #     #      #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######       #####       ######   ######  #    #   ####   #    #       #####   ######  #    #


RUS_upgrade_appropriate_ship_designer_3_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = RUS_black_sea_shipyard
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard
			add_idea = RUS_black_sea_shipyard_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1
			add_idea = RUS_black_sea_shipyard_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_4
			add_idea = RUS_black_sea_shipyard_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1_4
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_3_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1_4
			add_idea = RUS_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant
			add_idea = RUS_sevastopol_marine_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1
			add_idea = RUS_sevastopol_marine_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_4
			add_idea = RUS_sevastopol_marine_plant_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1_4
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_3_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1_4
			add_idea = RUS_sevastopol_marine_plant_final_3
		}
	}
}

 #     #                                      #            ######                                        #####
 ##    #    ##    #    #    ##    #           #    #       #     #  #         ##     ####   #    #      #     #  ######    ##
 # #   #   #  #   #    #   #  #   #           #    #       #     #  #        #  #   #    #  #   #       #        #        #  #
 #  #  #  #    #  #    #  #    #  #           #    #       ######   #       #    #  #       ####         #####   #####   #    #
 #   # #  ######  #    #  ######  #           #######      #     #  #       ######  #       #  #              #  #       ######
 #    ##  #    #   #  #   #    #  #                #       #     #  #       #    #  #    #  #   #       #     #  #       #    #
 #     #  #    #    ##    #    #  ######           #       ######   ######  #    #   ####   #    #       #####   ######  #    #


RUS_upgrade_appropriate_ship_designer_4_black_sea_effect = {
	#BLACK SEA SHIPYARD
	if = {
		limit = {
			has_idea = RUS_black_sea_shipyard
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard
			add_idea = RUS_black_sea_shipyard_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1
			add_idea = RUS_black_sea_shipyard_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_2
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_2
			add_idea = RUS_black_sea_shipyard_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_3
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_3
			add_idea = RUS_black_sea_shipyard_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1_2
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1_2
			add_idea = RUS_black_sea_shipyard_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_black_sea_shipyard_1_3
		}
		set_country_flag = RUS_merge_ship_black_sea_shipyard_4_flag
		swap_ideas = {
			remove_idea = RUS_black_sea_shipyard_1_3
			add_idea = RUS_black_sea_shipyard_final_3
		}
	}

	#SEVASTOPOL MARINE PLANT
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant
			add_idea = RUS_sevastopol_marine_plant_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1
			add_idea = RUS_sevastopol_marine_plant_1_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_2
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_2
			add_idea = RUS_sevastopol_marine_plant_2_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_3
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_3
			add_idea = RUS_sevastopol_marine_plant_3_4
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1_2
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1_2
			add_idea = RUS_sevastopol_marine_plant_final_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_sevastopol_marine_plant_1_3
		}
		set_country_flag = RUS_merge_ship_sevastopol_marine_plant_4_flag
		swap_ideas = {
			remove_idea = RUS_sevastopol_marine_plant_1_3
			add_idea = RUS_sevastopol_marine_plant_final_3
		}
	}
}


   ###    #### ########   ######  ########     ###    ######## ########    ########  ########  ######  ####  ######   ##    ## ######## ########
  ## ##    ##  ##     ## ##    ## ##     ##   ## ##   ##          ##       ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
 ##   ##   ##  ##     ## ##       ##     ##  ##   ##  ##          ##       ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
##     ##  ##  ########  ##       ########  ##     ## ######      ##       ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
#########  ##  ##   ##   ##       ##   ##   ######### ##          ##       ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##     ##  ##  ##    ##  ##    ## ##    ##  ##     ## ##          ##       ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##     ## #### ##     ##  ######  ##     ## ##     ## ##          ##       ########  ########  ######  ####  ######   ##    ## ######## ##     ##

    #                                                             #
   # #    #  #####    ####   #####     ##    ######  #####       ##
  #   #   #  #    #  #    #  #    #   #  #   #         #        # #
 #     #  #  #    #  #       #    #  #    #  #####     #          #
 #######  #  #####   #       #####   ######  #         #          #
 #     #  #  #   #   #    #  #   #   #    #  #         #          #
 #     #  #  #    #   ####   #    #  #    #  #         #        #####


RUS_upgrade_appropriate_aircraft_designer_1_effect = {
	#MIG
	if = {
		limit = {
			has_idea = RUS_mig_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau
			add_idea = RUS_mig_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_2
			add_idea = RUS_mig_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_3
			add_idea = RUS_mig_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_2_3
		}
		set_country_flag = RUS_merge_aircraft_mig_1_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_2_3
			add_idea = RUS_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau
			add_idea = RUS_ilyushin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_2
			add_idea = RUS_ilyushin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_3
			add_idea = RUS_ilyushin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_2_3
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_1_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_2_3
			add_idea = RUS_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau
			add_idea = RUS_tupolev_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_2
			add_idea = RUS_tupolev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_3
			add_idea = RUS_tupolev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_2_3
		}
		set_country_flag = RUS_merge_aircraft_tupolev_1_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_2_3
			add_idea = RUS_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau
			add_idea = RUS_yakovlev_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_2
			add_idea = RUS_yakovlev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_3
			add_idea = RUS_yakovlev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_2_3
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_1_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_2_3
			add_idea = RUS_yakovlev_design_bureau_final
		}
	}
}

    #                                                            #####
   # #    #  #####    ####   #####     ##    ######  #####      #     #
  #   #   #  #    #  #    #  #    #   #  #   #         #              #
 #     #  #  #    #  #       #    #  #    #  #####     #         #####
 #######  #  #####   #       #####   ######  #         #        #
 #     #  #  #   #   #    #  #   #   #    #  #         #        #
 #     #  #  #    #   ####   #    #  #    #  #         #        #######


RUS_upgrade_appropriate_aircraft_designer_2_effect = {
	#MIG
	if = {
		limit = {
			has_idea = RUS_mig_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau
			add_idea = RUS_mig_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_1
			add_idea = RUS_mig_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_3
			add_idea = RUS_mig_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_1_3
		}
		set_country_flag = RUS_merge_aircraft_mig_2_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_1_3
			add_idea = RUS_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau
			add_idea = RUS_ilyushin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_1
			add_idea = RUS_ilyushin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_3
			add_idea = RUS_ilyushin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_1_3
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_2_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_1_3
			add_idea = RUS_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau
			add_idea = RUS_tupolev_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_1
			add_idea = RUS_tupolev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_3
			add_idea = RUS_tupolev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_1_3
		}
		set_country_flag = RUS_merge_aircraft_tupolev_2_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_1_3
			add_idea = RUS_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau
			add_idea = RUS_yakovlev_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_1
			add_idea = RUS_yakovlev_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_3
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_3
			add_idea = RUS_yakovlev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_1_3
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_2_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_1_3
			add_idea = RUS_yakovlev_design_bureau_final
		}
	}
}

    #                                                            #####
   # #    #  #####    ####   #####     ##    ######  #####      #     #
  #   #   #  #    #  #    #  #    #   #  #   #         #              #
 #     #  #  #    #  #       #    #  #    #  #####     #         #####
 #######  #  #####   #       #####   ######  #         #              #
 #     #  #  #   #   #    #  #   #   #    #  #         #        #     #
 #     #  #  #    #   ####   #    #  #    #  #         #         #####


RUS_upgrade_appropriate_aircraft_designer_3_effect = {
	#MIG
	if = {
		limit = {
			has_idea = RUS_mig_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau
			add_idea = RUS_mig_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_1
			add_idea = RUS_mig_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_2
			add_idea = RUS_mig_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_mig_design_bureau_1_2
		}
		set_country_flag = RUS_merge_aircraft_mig_3_flag
		swap_ideas = {
			remove_idea = RUS_mig_design_bureau_1_2
			add_idea = RUS_mig_design_bureau_final
		}
	}

	#ILYUSHIN
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau
			add_idea = RUS_ilyushin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_1
			add_idea = RUS_ilyushin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_2
			add_idea = RUS_ilyushin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_ilyushin_design_bureau_1_2
		}
		set_country_flag = RUS_merge_aircraft_ilyushin_3_flag
		swap_ideas = {
			remove_idea = RUS_ilyushin_design_bureau_1_2
			add_idea = RUS_ilyushin_design_bureau_final
		}
	}

	#TUPOLEV
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau
			add_idea = RUS_tupolev_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_1
			add_idea = RUS_tupolev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_2
			add_idea = RUS_tupolev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tupolev_design_bureau_1_2
		}
		set_country_flag = RUS_merge_aircraft_tupolev_3_flag
		swap_ideas = {
			remove_idea = RUS_tupolev_design_bureau_1_2
			add_idea = RUS_tupolev_design_bureau_final
		}
	}

	#YAKOVLEV
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau
			add_idea = RUS_yakovlev_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_1
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_1
			add_idea = RUS_yakovlev_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_2
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_2
			add_idea = RUS_yakovlev_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_yakovlev_design_bureau_1_2
		}
		set_country_flag = RUS_merge_aircraft_yakovlev_3_flag
		swap_ideas = {
			remove_idea = RUS_yakovlev_design_bureau_1_2
			add_idea = RUS_yakovlev_design_bureau_final
		}
	}
}


##     ##    ###    ######## ######## ########  #### ######## ##          ########  ########  ######  ####  ######   ##    ## ######## ########
###   ###   ## ##      ##    ##       ##     ##  ##  ##       ##          ##     ## ##       ##    ##  ##  ##    ##  ###   ## ##       ##     ##
#### ####  ##   ##     ##    ##       ##     ##  ##  ##       ##          ##     ## ##       ##        ##  ##        ####  ## ##       ##     ##
## ### ## ##     ##    ##    ######   ########   ##  ######   ##          ##     ## ######    ######   ##  ##   #### ## ## ## ######   ########
##     ## #########    ##    ##       ##   ##    ##  ##       ##          ##     ## ##             ##  ##  ##    ##  ##  #### ##       ##   ##
##     ## ##     ##    ##    ##       ##    ##   ##  ##       ##          ##     ## ##       ##    ##  ##  ##    ##  ##   ### ##       ##    ##
##     ## ##     ##    ##    ######## ##     ## #### ######## ########    ########  ########  ######  ####  ######   ##    ## ######## ##     ##

 #     #                                                          #
 ##   ##    ##    #####  ######  #####   #  ######  #            ##
 # # # #   #  #     #    #       #    #  #  #       #           # #
 #  #  #  #    #    #    #####   #    #  #  #####   #             #
 #     #  ######    #    #       #####   #  #       #             #
 #     #  #    #    #    #       #   #   #  #       #             #
 #     #  #    #    #    ######  #    #  #  ######  ######      #####

RUS_upgrade_appropriate_materiel_designer_1_artillery_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = RUS_grabin_design_bureau
		}
		set_country_flag = RUS_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau
			add_idea = RUS_grabin_design_bureau_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_2
		}
		set_country_flag = RUS_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_2
			add_idea = RUS_grabin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_3
		}
		set_country_flag = RUS_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_3
			add_idea = RUS_grabin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_2_3
		}
		set_country_flag = RUS_merge_materiel_grabin_1_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_2_3
			add_idea = RUS_grabin_design_bureau_final
		}
	}
}

RUS_upgrade_appropriate_materiel_designer_1_infantry_effect = {
	#TULA
	if = {
		limit = {
			has_idea = RUS_tula_arms_plant
		}
		set_country_flag = RUS_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant
			add_idea = RUS_tula_arms_plant_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_2
		}
		set_country_flag = RUS_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_2
			add_idea = RUS_tula_arms_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_3
		}
		set_country_flag = RUS_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_3
			add_idea = RUS_tula_arms_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_2_3
		}
		set_country_flag = RUS_merge_materiel_tula_1_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_2_3
			add_idea = RUS_tula_arms_plant_final
		}
	}
}

RUS_upgrade_appropriate_materiel_designer_1_motorized_effect = {
	#GAZ
	if = {
		limit = {
			has_idea = RUS_gaz
		}
		set_country_flag = RUS_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = RUS_gaz
			add_idea = RUS_gaz_1
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_2
		}
		set_country_flag = RUS_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = RUS_gaz_2
			add_idea = RUS_gaz_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_3
		}
		set_country_flag = RUS_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = RUS_gaz_3
			add_idea = RUS_gaz_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_2_3
		}
		set_country_flag = RUS_merge_materiel_gaz_1_flag
		swap_ideas = {
			remove_idea = RUS_gaz_2_3
			add_idea = RUS_gaz_final
		}
	}
}

 #     #                                                         #####
 ##   ##    ##    #####  ######  #####   #  ######  #           #     #
 # # # #   #  #     #    #       #    #  #  #       #                 #
 #  #  #  #    #    #    #####   #    #  #  #####   #            #####
 #     #  ######    #    #       #####   #  #       #           #
 #     #  #    #    #    #       #   #   #  #       #           #
 #     #  #    #    #    ######  #    #  #  ######  ######      #######


RUS_upgrade_appropriate_materiel_designer_2_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = RUS_grabin_design_bureau
		}
		set_country_flag = RUS_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau
			add_idea = RUS_grabin_design_bureau_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_1
		}
		set_country_flag = RUS_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_1
			add_idea = RUS_grabin_design_bureau_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_3
		}
		set_country_flag = RUS_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_3
			add_idea = RUS_grabin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_1_3
		}
		set_country_flag = RUS_merge_materiel_grabin_2_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_1_3
			add_idea = RUS_grabin_design_bureau_final
		}
	}

	#TULA
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant
		}
		set_country_flag = RUS_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant
			add_idea = RUS_tula_arms_plant_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_1
		}
		set_country_flag = RUS_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_1
			add_idea = RUS_tula_arms_plant_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_3
		}
		set_country_flag = RUS_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_3
			add_idea = RUS_tula_arms_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_1_3
		}
		set_country_flag = RUS_merge_materiel_tula_2_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_1_3
			add_idea = RUS_tula_arms_plant_final
		}
	}

	#GAZ
	else_if = {
		limit = {
			has_idea = RUS_gaz
		}
		set_country_flag = RUS_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = RUS_gaz
			add_idea = RUS_gaz_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_1
		}
		set_country_flag = RUS_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = RUS_gaz_1
			add_idea = RUS_gaz_1_2
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_3
		}
		set_country_flag = RUS_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = RUS_gaz_3
			add_idea = RUS_gaz_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_1_3
		}
		set_country_flag = RUS_merge_materiel_gaz_2_flag
		swap_ideas = {
			remove_idea = RUS_gaz_1_3
			add_idea = RUS_gaz_final
		}
	}
}

 #     #                                                         #####
 ##   ##    ##    #####  ######  #####   #  ######  #           #     #
 # # # #   #  #     #    #       #    #  #  #       #                 #
 #  #  #  #    #    #    #####   #    #  #  #####   #            #####
 #     #  ######    #    #       #####   #  #       #                 #
 #     #  #    #    #    #       #   #   #  #       #           #     #
 #     #  #    #    #    ######  #    #  #  ######  ######       #####

RUS_upgrade_appropriate_materiel_designer_3_effect = {
	#GRABIN
	if = {
		limit = {
			has_idea = RUS_grabin_design_bureau
		}
		set_country_flag = RUS_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau
			add_idea = RUS_grabin_design_bureau_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_1
		}
		set_country_flag = RUS_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_1
			add_idea = RUS_grabin_design_bureau_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_2
		}
		set_country_flag = RUS_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_2
			add_idea = RUS_grabin_design_bureau_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_grabin_design_bureau_1_2
		}
		set_country_flag = RUS_merge_materiel_grabin_3_flag
		swap_ideas = {
			remove_idea = RUS_grabin_design_bureau_1_2
			add_idea = RUS_grabin_design_bureau_final
		}
	}

	#TULA
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant
		}
		set_country_flag = RUS_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant
			add_idea = RUS_tula_arms_plant_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_1
		}
		set_country_flag = RUS_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_1
			add_idea = RUS_tula_arms_plant_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_2
		}
		set_country_flag = RUS_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_2
			add_idea = RUS_tula_arms_plant_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_tula_arms_plant_1_2
		}
		set_country_flag = RUS_merge_materiel_tula_3_flag
		swap_ideas = {
			remove_idea = RUS_tula_arms_plant_1_2
			add_idea = RUS_tula_arms_plant_final
		}
	}

	#GAZ
	else_if = {
		limit = {
			has_idea = RUS_gaz
		}
		set_country_flag = RUS_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = RUS_gaz
			add_idea = RUS_gaz_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_1
		}
		set_country_flag = RUS_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = RUS_gaz_1
			add_idea = RUS_gaz_1_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_2
		}
		set_country_flag = RUS_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = RUS_gaz_2
			add_idea = RUS_gaz_2_3
		}
	}
	else_if = {
		limit = {
			has_idea = RUS_gaz_1_2
		}
		set_country_flag = RUS_merge_materiel_gaz_3_flag
		swap_ideas = {
			remove_idea = RUS_gaz_1_2
			add_idea = RUS_gaz_final
		}
	}
}

 ## #   #  ##  ###       ##  #  # #  # ###   ##  #  #      ## ###  ### ###  ### ###  ##
#   #   # #  # #  #     #  # #  # #  # #  # #  # #  #     #   #  #  #  #  #  #   #  #
 #  # # # #### ###      #    #### #  # ###  #    ####      #  ###   #  ###   #   #   #
  # # # # #  # #        #  # #  # #  # #  # #  # #  #       # #     #  #  #  #   #    #
##   # #  #  # #         ##  #  #  ##  #  #  ##  #  #     ##  #    ### #  # ###  #  ##





###########################################################################################################################

 ##   ##  #   # #   # #  # #  # ###  ## ###      ##  ### #   # ### #       #   #  ##  ###      ### ### ### ###  ##  ###  ##
#  # #  # ## ## ## ## #  # ## #  #  #    #      #  #  #  #   #  #  #       #   # #  # #  #     #   #   #   #   #  #  #  #
#    #  # # # # # # # #  # # ##  #   #   #      #     #   # #   #  #       # # # #### ###      ##  ##  ##  ##  #     #   #
#  # #  # #   # #   # #  # #  #  #    #  #      #  #  #   # #   #  #       # # # #  # #  #     #   #   #   #   #  #  #    #
 ##   ##  #   # #   #  ##  #  # ### ##   #       ##  ###   #   ### ###      # #  #  # #  #     ### #   #   ###  ##   #  ##

###########################################################################################################################

RUS_set_up_nkvd = {
	random_owned_state = {
		limit = { is_capital = yes }

		create_unit = {
			division = "name = \"5ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"6ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"7ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"8ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"9ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"10ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"11ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"12ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"13ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"14ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"15ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"16ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"17ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
		create_unit = {
			division = "name = \"18ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = PREV
		}
	}

	
	IF = {
		limit = {}
		random_owned_controlled_state = {
			create_unit = {
				division = "division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = ROOT count = var:BWR.RUS_nkvd_divisions
			}

		}
	}
}

RUS_set_up_red_army = {

	delete_unit_template_and_units = {
	    division_template = "Strelkovaya Diviziya"
	    disband = yes
	}
	division_template = {
		name = "Strelkovaya Diviziya"
		division_names_group = RUS_INF_01

		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
			infantry = { x = 1 y = 2 }
			infantry = { x = 2 y = 0 }
			infantry = { x = 2 y = 1 }
			infantry = { x = 2 y = 2 }
		}
		support = {
			artillery = { x = 0 y = 0 }
		}
	}
	delete_unit_template_and_units = {
	    division_template = "Motostrelkovaya Diviziya"
	    disband = yes
	}

	division_template = {
		name = "Motostrelkovaya Diviziya"
		division_names_group = RUS_MOT_01
		regiments = {
			motorized = { x = 0 y = 0 }
			motorized = { x = 0 y = 1 }
			motorized = { x = 0 y = 2 }
			motorized = { x = 1 y = 0 }
			motorized = { x = 1 y = 1 }
			motorized = { x = 1 y = 2 }
		}
	}
	delete_unit_template_and_units = {
	    division_template = "Kavaleriyskaya Diviziya"
	    disband = yes
	}
	division_template = {
		name = "Kavaleriyskaya Diviziya" 	# Cavalry Division
		division_names_group = RUS_CAV_01

		regiments = {
			cavalry = { x = 0 y = 0 }
			cavalry = { x = 0 y = 1 }
			cavalry = { x = 1 y = 0 }
			cavalry = { x = 1 y = 1 }
		}
	}
	var:BWR.RUS_stalinist_civil_war_start_state = {

		create_unit = {
			division = "name = \"Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0" owner = PREV count = var:PREV.civil_war_army_size
		}
	}
	random_owned_state = {
		limit = {
			NOT = { state = var:BWR.RUS_stalinist_civil_war_start_state  }
		}
		create_unit = {
			division = "name = \"Strelkovaya Diviziya\" division_template = \"Strelkovaya Diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0" owner = PREV count = var:PREV.civil_war_army_size
		}
	}
	random_owned_state = {
		limit = {
			NOT = { state = var:BWR.RUS_stalinist_civil_war_start_state  }
			any_neighbor_state = { state = var:BWR.RUS_stalinist_civil_war_start_state  }
		}
		create_unit = {
			division = "name = \"Moskva Proletarskaya Motostrelkovaya Diviziya\" division_template = \"Motostrelkovaya Diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0" owner = PREV count = 1
		}
	}
	random_owned_state = {
		limit = {
			any_neighbor_state = { state = var:BWR.RUS_stalinist_civil_war_start_state }
		}
		create_unit = {
			division = "name = \"Kavaleriyskaya Diviziya\" division_template = \"Kavaleriyskaya Diviziya\" start_experience_factor = 0.1 start_equipment_factor = 1.0" owner = PREV count = var:PREV.civil_war_army_size
		}
	}
	clear_variable = PREV.civil_war_army_size


}

RUS_set_up_left_opposition_militia = {
	division_template = {
	    name = "Trotskyist Workers' Militia"
	    is_locked = yes
	    division_names_group = RUS_INF_01
	    priority = 0
	    template_counter = 0
	    regiments = {
	        infantry = { x = 0 y = 0 }
	        infantry = { x = 0 y = 1 }
	        infantry = { x = 0 y = 2 }
	    }
	    is_locked = yes
	}
	division_template = {
	    name = "Trotskyist Peasant Militia"
	    is_locked = yes
	    division_names_group = RUS_INF_01
	    priority = 0
	    template_counter = 14
	    regiments = {
	        infantry = { x = 0 y = 0 }
	        infantry = { x = 0 y = 1 }
	        infantry = { x = 1 y = 0 }
	        infantry = { x = 1 y = 1 }
	    }
	    is_locked = yes
	}
	every_owned_state = {
		IF = {
			limit = {
				OR = {
					has_state_category = city
					has_state_category = large_city
					has_state_category = megalopolis
					has_state_category = metropolis
				}
			}
			create_unit = {
				division = "name = \"Workers' Miltia Brigade\" division_template = \"Trotskyist Workers' Militia\" start_experience_factor = 0.09 start_equipment_factor = 0.85" owner = ROOT
			}
		}
		ELSE_IF = {
			limit = {
				NOT = { has_state_category = enclave }
				NOT = { has_state_category = wasteland }
			}
			create_unit = {
				division = "name = \"Peasant Militia brigade\" division_template = \"Trotskyist Peasant Militia\" start_experience_factor = 0.01 start_equipment_factor = 0.55" owner = ROOT
			}
		}
	}
}

RUS_set_up_right_opposition_militia = {
	division_template = {
	    name = "Bukharinist Workers' Militia"
	    is_locked = yes
	    division_names_group = RUS_INF_01
	    priority = 0
	    template_counter = 0
	    regiments = {
	        infantry = { x = 0 y = 0 }
	        infantry = { x = 0 y = 1 }
	        infantry = { x = 0 y = 2 }
	    }
	    is_locked = yes
	}
	division_template = {
	    name = "Bukharinist Peasant Militia"
	    is_locked = yes
	    division_names_group = RUS_INF_01
	    priority = 0
	    template_counter = 14
	    regiments = {
	        infantry = { x = 0 y = 0 }
	        infantry = { x = 0 y = 1 }
	        infantry = { x = 1 y = 0 }
	        infantry = { x = 1 y = 1 }
	    }
	    is_locked = yes
	}
	every_owned_state = {
		IF = {
			limit = {
				OR = {
					has_state_category = city
					has_state_category = large_city
					has_state_category = megalopolis
					has_state_category = metropolis
				}
			}
			create_unit = {
				division = "name = \"Workers' Miltia Brigade\" division_template = \"Bukharinist Workers' Militia\" start_experience_factor = 0.09 start_equipment_factor = 0.85" owner = ROOT
			}
		}
		ELSE_IF = {
			limit = {
				NOT = { has_state_category = enclave }
				NOT = { has_state_category = wasteland }
			}
			create_unit = {
				division = "name = \"Peasant Militia brigade\" division_template = \"Bukharinist Peasant Militia\" start_experience_factor = 0.01 start_equipment_factor = 0.55" owner = ROOT
			}
		}
		# More Peasant Militia if collectivization has been reversed
		
	}
}

RUS_set_up_extras_from_concessions = {
	# Extra Troops from Japan?
	IF = {
		limit = {
			has_country_flag = RUS_CSW_transfer_vladivostok_flag
			any_country= {
				original_tag = BWR
				owns_state = 408
			}
		}
		RUS_set_up_japanese_troops = yes
	}
	# Equipment from Japan in return for North Sakhalin
	IF = {
		limit = {
			has_country_flag = RUS_CSW_transfer_sakhalin_flag
			any_country= {
				original_tag = BWR
				owns_state = 655
			}
		}
		
	}

	# Advisors from Germany
	IF = {
		limit = {
			has_country_flag = RUS_CSW_german_advisors_flag
		}
		GER = {
			country_event = {
				id = NSB_soviet_civil_war_common.109
				hours = 1
			}
		}
	}

	# Equipment from Germany
	IF = { 
		limit = { 
			has_country_flag = RUS_CSW_baku_oil_flag 
		}
		IF = {
			limit = {
				NOT = {
					has_dlc = "No Step Back"
				}
			}
			add_equipment_to_stockpile = { type = light_tank_equipment_2 amount = 100 producer = GER }
		}
		ELSE = { 
			add_equipment_to_stockpile = { type = light_tank_chassis_2 amount = 100 producer = GER variant_name = "Panzer II Ausf. a" } 
		}
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 200 producer = GER }
	}




	# German Ukrainian Insurrection
	IF = {
		limit = {
			has_country_flag = RUS_CSW_ukraine_germany_ready_flag
		}
		country_event = {
			id = NSB_soviet_civil_war_common.114
			hours = 1
		}
	}

	# Adding weapons for trotsky
	for_each_loop = {
		array = BWR.many_weapons_array
		value = weapons_country
		add_equipment_to_stockpile = {
			type = infantry_equipment
			amount = 200
			producer = var:weapons_country
		}
	}
	for_each_loop = {
		array = BWR.few_weapons_array
		value = weapons_country
		add_equipment_to_stockpile = {
			type = infantry_equipment
			amount = 50
			producer = var:weapons_country
		}
	}
}

#######################
### COUNTRY LEADERS ###
#######################



RUS_promote_to_country_leader_trotsky = {
	add_country_leader_role = {
		character = "RUS_lev_trotsky"
		country_leader = {
			ideology = marxism
			traits = { permanent_revolutionary }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_trotsky_country_leader_flag }
}

RUS_promote_to_country_leader_smirnov = {
	add_country_leader_role = {
		character = "RUS_ivan_smirnov"
		country_leader = {
			ideology = marxism
			traits = { the_siberian_lenin }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_smirnov_country_leader_flag }
}

RUS_promote_to_country_leader_bukharin = {
	add_country_leader_role = {
		character = "RUS_nikolay_bukharin"
		country_leader = {
			ideology = marxism
			traits = { defender_of_the_peasantry }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_bukharin_country_leader_flag }
}

RUS_promote_to_country_leader_rykov = {
	add_country_leader_role = {
		character = "RUS_aleksey_rykov"
		country_leader = {
			ideology = marxism
			traits = { labor_defense_organizer }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_rykov_country_leader_flag }
}

RUS_promote_to_country_leader_zinovyev = {
	add_country_leader_role = {
		character = "RUS_grigory_zinovyev"
		country_leader = {
			ideology = marxism
			traits = { born_agitator }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_zinovyev_country_leader_flag }
}

RUS_promote_to_country_leader_kamenev = {
	add_country_leader_role = {
		character = "RUS_lev_kamenev"
		country_leader = {
			ideology = marxism
			traits = { the_faded_star }
			expire = "1965.1.1.1"
		}
		promote_leader = yes
	}
	BWR = { set_country_flag = RUS_kamenev_country_leader_flag }
}

RUS_promote_to_country_leader_provisional = {
	RUS_provisional_government = {
		remove_trait = {
			ideology = despotism
			trait = emigre_connections
		}
		remove_trait = {
			ideology = despotism
			trait = desperate_gambit
		}
		remove_trait = {
			ideology = despotism
			trait = dysfunctional_assembly
		}
		add_trait = {
			ideology = despotism
			trait = internal_rivalry
		}
		promote_character = yes
	}
}
# japanese_expeditionary_leader_flag
RUS_set_up_japanese_troops = {
	division_template = {
	    name = "Japanese Expeditionary Force"
	    division_names_group = RUS_JAP_INF
	    is_locked = yes
	    priority = 1
	    template_counter = 3
	    regiments = {
	        infantry = { x = 0 y = 0 }
	        infantry = { x = 0 y = 1 }
	        infantry = { x = 0 y = 2 }
	        infantry = { x = 1 y = 0 }
	        infantry = { x = 1 y = 1 }
	        infantry = { x = 1 y = 2 }
	        artillery_brigade = { x= 2 y = 0}
	        artillery_brigade = { x= 2 y = 1}
	    }
	    is_locked = yes
	}
	

	var:RUS_civil_war_start_state = {
		create_unit = {
			division = "division_template = \"Japanese Expeditionary Force\" start_experience_factor = 0.2 start_equipment_factor = 0.95" owner = ROOT count = 24
		}
		

	}

	# Add air support 

	add_equipment_to_stockpile = { type = small_plane_airframe  amount = 100 producer = JAP }
	add_equipment_to_stockpile = { type = medium_plane_airframe  amount = 50 producer = JAP }
	
	
}

# Start creating HQ for Civil war
RUS_start_setting_up_hq_state = {
	set_country_flag = { flag = RUS_align_state_in_process days = 5 value = 1 }
	FROM = { set_state_flag = RUS_hq_state_selected }
	set_country_flag = RUS_hq_state_selected_country_flag
}

# Define state as controlled for Civil War
RUS_set_civil_war_state = {
	custom_effect_tooltip = RUS_set_civil_war_state_tt

	IF = {
		limit = { RUS_is_left_opposition = yes }
		FROM = { set_state_flag = RUS_left_opposition_state }
		FROM = { clr_state_flag = RUS_is_aligning_left }
	}
	ELSE_IF = {
		limit = { RUS_is_right_opposition = yes }
		FROM = { set_state_flag = RUS_right_opposition_state }
		FROM = { clr_state_flag = RUS_is_aligning_right }
	}
	ELSE_IF = {
		limit = { RUS_is_exiles = yes }
		FROM = { set_state_flag = RUS_exiles_state }
		FROM = { clr_state_flag = RUS_is_aligning_exiles }
	}
}

# Start aligning state for Civil War
RUS_start_infiltrating_state = {
	custom_effect_tooltip = RUS_start_infiltrating_state_tt
	set_country_flag = { flag = RUS_align_state_in_process days = 14 value = 1 }
	IF = {
		limit = { RUS_is_left_opposition = yes }
		FROM = { set_state_flag = RUS_is_aligning_left }
	}
	ELSE_IF = {
		limit = { RUS_is_right_opposition = yes }
		FROM = { set_state_flag = RUS_is_aligning_right }
	}
	ELSE_IF = {
		limit = { RUS_is_exiles = yes }
		FROM = { set_state_flag = RUS_is_aligning_exiles }
	}
}

RUS_initiate_civil_war = {
	

		# Set War Flag
		set_global_flag = RUS_soviet_civil_war
		IF = {
			limit = {
				RUS_is_exiles = yes 
			}
			MAN = { give_military_access = SOP }
		}


		# Remove Paranoia
		

		# Get Ideology Support
		set_variable = { RUS_communist_support_before_civil_war = party_popularity_100@communism }
		set_variable = { RUS_democratic_support_before_civil_war = party_popularity_100@democratic }
		set_variable = { RUS_fascist_support_before_civil_war = party_popularity_100@fascism }
		set_variable = { RUS_neutrality_support_before_civil_war = party_popularity_100@neutrality }

		# Disband the NKVD -  they will come back, no worries
		delete_units = {
			division_template = "NKVD Pogranichnaya Diviziya"
			disband = no
		}
}

RUS_set_up_civil_war_capital = {
	IF = {
		limit = {
			check_variable = { ROOT.RUS_civil_war_start_state = 0 }
		}
		# If we don't have a base: 
		random_owned_state = {
			limit = { 
				NOT = { state = 219 } 
				NOT = { region = 132 }
				NOT = { region = 133 }
			}
			set_variable = { ROOT.RUS_civil_war_start_state = THIS }
			IF = {
				limit = { RUS_is_left_opposition = yes }
				THIS = { set_state_flag = RUS_left_opposition_state }
			}
			ELSE_IF = {
				limit = { RUS_is_right_opposition = yes }
				THIS = { set_state_flag = RUS_right_opposition_state }
			}
			ELSE_IF = {
				limit = { RUS_is_exiles = yes }
				THIS = { set_state_flag = RUS_exiles_state }
			}
		}
	}
	set_capital = {
		state = var:ROOT.RUS_civil_war_start_state
		remember_old_capital = no
	}
	IF = {
		limit = {
			check_variable = { ROOT.RUS_stalinist_civil_war_start_state = 0 }
		}
		set_variable = { ROOT.RUS_stalinist_civil_war_start_state = 219 }
	}
	# Increase importance of Chita if capital, and add hub (for supply and surrender)
	IF = {
		limit = {
			var:ROOT.RUS_civil_war_start_state = { state = 563 }
		}
		add_victory_points = {
			province = 4705
			value = 4
		}

		563 = {
			add_building_construction = {
				type = supply_node 
				level = 1
				instant_build = yes
				province = 4705
			}
		}
	}
}

RUS_set_up_civil_war_army_fractions = {
	# Verify armed forces fractions
	IF = {
		limit = { RUS_is_right_opposition = yes }
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_right_opposition_army_support }
			}
			set_variable = { ROOT.RUS_right_opposition_army_support = 0.2 }
		}
		IF = { 
			limit = { 
				BWR = { is_ai = yes } 
				check_variable = { ROOT.RUS_right_opposition_army_support < 0.55 }
			}
			add_to_variable = { ROOT.RUS_right_opposition_army_support = 0.25 }
		}
		clamp_variable = {
			var = ROOT.RUS_right_opposition_army_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_right_opposition_navy_support }
			}
			set_variable = { ROOT.RUS_left_opposition_navy_support = 0.1 }
		}
		clamp_variable = {
			var = ROOT.RUS_right_opposition_navy_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_right_opposition_air_support }
			}
			set_variable = { ROOT.RUS_right_opposition_air_support = 0 }
		}
		clamp_variable = {
			var = ROOT.RUS_right_opposition_air_support
			min = 0
			max = 0.9
		}
		set_temp_variable = { temp_centre_army = 1 }
		subtract_from_temp_variable = { temp_centre_army = ROOT.RUS_right_opposition_army_support }
		set_temp_variable = { temp_centre_navy = 1 }
		subtract_from_temp_variable = { temp_centre_navy = ROOT.RUS_right_opposition_navy_support }
		set_temp_variable = { temp_centre_air = 1 }
		subtract_from_temp_variable = { temp_centre_air = ROOT.RUS_right_opposition_air_support }
	}
	ELSE_IF = {
		limit = {
			RUS_is_left_opposition = yes
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_left_opposition_army_support }
			}
			set_variable = { ROOT.RUS_left_opposition_army_support = 0.2 }
		}
		IF = { 
			limit = { 
				BWR = { is_ai = yes } 
				check_variable = { ROOT.RUS_left_opposition_army_support < 0.55 }
			}
			add_to_variable = { ROOT.RUS_left_opposition_army_support = 0.25 }
		}
		clamp_variable = {
			var = ROOT.RUS_left_opposition_army_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_left_opposition_navy_support }
			}
			set_variable = { ROOT.RUS_left_opposition_navy_support = 0.1 }
		}
		clamp_variable = {
			var = ROOT.RUS_left_opposition_navy_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_left_opposition_air_support }
			}
			set_variable = { ROOT.RUS_left_opposition_air_support = 0 }
		}
		clamp_variable = {
			var = ROOT.RUS_left_opposition_air_support
			min = 0
			max = 0.9
		}
		set_temp_variable = { temp_centre_army = 1 }
		subtract_from_temp_variable = { temp_centre_army = ROOT.RUS_left_opposition_army_support }
		set_temp_variable = { temp_centre_navy = 1 }
		subtract_from_temp_variable = { temp_centre_navy = ROOT.RUS_left_opposition_navy_support }
		set_temp_variable = { temp_centre_air = 1 }
		subtract_from_temp_variable = { temp_centre_air = ROOT.RUS_left_opposition_air_support }
	}
	ELSE_IF = {
		limit = {
			RUS_is_exiles = yes
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_exiles_army_support }
			}
			set_variable = { ROOT.RUS_exiles_army_support = 0.2 }
		}
		IF = { 
			limit = { 
				BWR = { is_ai = yes }
				check_variable = { ROOT.RUS_exiles_army_support < 0.55 }
			}
			add_to_variable = { ROOT.RUS_exiles_army_support = 0.25 }
		}
		clamp_variable = {
			var = ROOT.RUS_exiles_army_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_exiles_navy_support }
			}
			set_variable = { ROOT.RUS_exiles_navy_support = 0.1 }
		}
		clamp_variable = {
			var = ROOT.RUS_exiles_navy_support
			min = 0
			max = 0.9
		}
		IF = {
			limit = {
				NOT = { has_variable = ROOT.RUS_exiles_air_support }
			}
			set_variable = { ROOT.RUS_exiles_air_support = 0 }
		}
		IF = { 
			limit = { 
				BWR = { is_ai = yes } 
				check_variable = { ROOT.RUS_exiles_air_support < 0.55 }
			}
			add_to_variable = { ROOT.RUS_exiles_air_support = 0.25 }
		}
		clamp_variable = {
			var = ROOT.RUS_exiles_air_support
			min = 0
			max = 0.9
		}

		set_temp_variable = { temp_centre_army = 1 }
		subtract_from_temp_variable = { temp_centre_army = ROOT.RUS_exiles_army_support }
		set_temp_variable = { temp_centre_navy = 1 }
		subtract_from_temp_variable = { temp_centre_navy = ROOT.RUS_exiles_navy_support }
		set_temp_variable = { temp_centre_air = 1 }
		subtract_from_temp_variable = { temp_centre_air = ROOT.RUS_exiles_air_support }
	}

}

RUS_start_civil_war = {
	# Define the Player Country Ideology
	IF= {
		limit = { RUS_is_left_opposition = yes }
		set_temp_variable = { temp_ideology = token:communism }
	}
	ELSE_IF= {
		limit = { RUS_is_right_opposition = yes }
		set_temp_variable = { temp_ideology = token:communism }
	}
	ELSE_IF= {
		limit = { RUS_is_exiles = yes }
		set_temp_variable = { temp_ideology = token:neutrality }
	}

	# Lose border war with JAP 
	IF = {
		limit = {
			has_border_war_between = {
				attacker = 527
				defender = 408
			}
		}
		finalize_border_war = {
			attacker_win = yes
			attacker = 527
			defender = 408
		}
	}
	ELSE_IF = {
		limit = {
			has_border_war_between = {
				attacker = 408
				defender = 527
			}
		}
		finalize_border_war = {
			defender_win = yes
			attacker = 408
			defender = 527
		}
	}

	# Dismantle the comintern (if faction leader)
	IF = { 
		limit = {
			ROOT = { is_faction_leader = yes }
		}
		ROOT = { dismantle_faction = yes }
	}

	# Launch The Civil War
	start_civil_war = {
		ideology = communism
		ruling_party = var:temp_ideology
		capital = var:ROOT.RUS_stalinist_civil_war_start_state
		states = all
		states_filter = {
			IF= {
				limit = { RUS_is_left_opposition = yes }
				NOT = { has_state_flag = RUS_left_opposition_state }
				is_fully_controlled_by = ROOT
			}
			ELSE_IF= {
				limit = { RUS_is_right_opposition = yes }
				NOT = { has_state_flag = RUS_right_opposition_state }
				is_fully_controlled_by = ROOT
			}
			ELSE_IF= {
				limit = { RUS_is_exiles = yes }
				NOT = { has_state_flag = RUS_exiles_state }
				is_fully_controlled_by = ROOT
			}
		}

		size = 0.75
		army_ratio = var:temp_centre_army
		navy_ratio = var:temp_centre_navy
		air_ratio = var:temp_centre_air

		keep_political_leader = yes
		
	}

	# Set Up Stalinist Soviet Union ( tag = SOS )
	random_country = {
		limit = {
			original_tag = BWR
			has_war_with = ROOT
			has_government = communism
		}
		set_cosmetic_tag = stalinist_soviet_union
		set_popularities = {
			communism = BWR.RUS_communist_support_before_civil_war
			democratic = BWR.RUS_democratic_support_before_civil_war
			fascism = BWR.RUS_fascist_support_before_civil_war
			neutrality = BWR.RUS_neutrality_support_before_civil_war
		}
		# Set Stalin as Leader if alive, else set Beriya
		# recruit_character = RUS_iosif_stalin
		IF = { 
			limit = { BWR = { has_character = RUS_iosif_stalin }}
			BWR = { RUS_iosif_stalin = { set_nationality = SOS } }
			promote_character = { character = RUS_iosif_stalin  ideology = stalinism }
		}
		

		# Remove ideas 
		
		# Rally the Red Army!
		IF = {
			limit = {
				num_divisions < 5
			}
			multiply_temp_variable = { temp_centre_army = 20 }
			set_variable = { civil_war_army_size = temp_centre_army }
			RUS_set_up_red_army = yes
		}

		# Set up "extra" template (Stalin likes his basic infantry template, no messing with it)
		delete_unit_template_and_units = {
		    division_template = "Gvardia"
		    disband = yes
		}
		division_template = {
			name = "Gvardia"
			division_names_group = RUS_INF_01

			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
				infantry = { x = 2 y = 2 }
			}
			support = {
				artillery = { x = 0 y = 0 }
			}
		}
		random_owned_controlled_state = {
			limit = { is_capital = yes }
			create_unit = {
				division = "division_template = \"Gvardia\" start_experience_factor = 0.1 start_equipment_factor = 1.0" owner = PREV count = 2
			}
		}

		# The Support of the NKVD
		IF = {
			limit = {
				NOT = { any_other_country = { has_country_flag = RUS_nkvd_aligned_flag } }
			}
			RUS_set_up_nkvd = yes
		}
		
			random_owned_controlled_state = {
				create_unit = {
					division = "name = \"1ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = SOS
				}
				create_unit = {
					division = "name = \"2ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = SOS
				}
				create_unit = {
					division = "name = \"3ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = SOS
				}
				create_unit = {
					division = "name = \"4ya NKVD Pogranichnaya Diviziya\" division_template = \"NKVD Pogranichnaya Diviziya\" start_experience_factor = 0.2 start_equipment_factor = 1.0" owner = SOS
				}
			}
		}

		# Load the Focus Tree
		load_focus_tree = { tree = soviet_focus keep_completed = yes }
		
		IF = {
			limit = { BWR = { has_country_flag = RUS_the_stalin_constitution_completed_flag } }
			complete_national_focus = RUS_the_stalin_constitution
		}

		
		IF = {
			limit = { BWR = { has_country_flag = RUS_socialism_in_one_country_completed_flag } }
			complete_national_focus = RUS_socialism_in_one_country
		}
		IF = {
			limit = { BWR = { has_country_flag = RUS_secure_the_administration_completed_flag } }
			complete_national_focus = RUS_secure_the_administration
		}
		
		# Set the Surrender Limit Modifier
		set_variable = { RUS_surrender_modifier = BWR.RUS_opposition_popular_support }
		divide_variable = { RUS_surrender_modifier = 100 } # convert to fraction
		clamp_variable = {
			var = RUS_surrender_modifier
			min = 0
			max = 0.9
		}
		multiply_variable = { RUS_surrender_modifier = -1 } # make negative
		RUS_set_up_dynamic_modifiers_civil_war = yes # Add Modifiers and Copy variables

		# Ensure no Stalinist Leaders side with the Opposition
		BWR = {
			every_unit_leader = {
				limit = {
					has_trait = trait_RUS_stalinist
				}
				set_nationality = SOS
			}
		}

		# give germany Wargoal if needed
		IF = {
			limit = {
				GER = { 
					has_completed_focus = GER_ussr_war_goal # has completed War with the USSR
					NOT = { has_war_with = BWR } # Not has started the war already
					has_wargoal_against = BWR # Still has the wargoal
				}
			}
			GER = {
				create_wargoal = {
					type = annex_everything
					target = SOS
					expire = 0
				}
			}
		}
	
	### Opposition country - new BWR 
	IF = {
		limit = {
			has_template = "NKVD Pogranichnaya Diviziya"
		}
		set_division_template_lock = {
			division_template = "NKVD Pogranichnaya Diviziya"
			is_locked = no
		}
	}
	# Exiles don't get any NKVD templates unless they later desert
	IF = {
		limit = { RUS_is_exiles = yes }
		BWR = {
			delete_unit_template_and_units = {
				division_template = "NKVD Pogranichnaya Diviziya"
				disband = no
			}
		}
	}	
	# Stalinist military will no longer be a thing in this country 
	IF = {
		limit = { has_country_flag = RUS_stalinist_military_flag }
		clr_country_flag = RUS_stalinist_military_flag
	}
	# Return non-converted states
	IF = {
		limit = { RUS_is_left_opposition = yes }
		every_controlled_state = {
			limit = { #This is a bit silly, but necessary.
				NOT = { has_state_flag = RUS_left_opposition_state }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
			}
			SOS = {
				transfer_state = PREV
			}
		}
	}
	ELSE_IF = {
		limit = { RUS_is_right_opposition = yes }
		every_controlled_state = {
			limit = { 
				NOT = { has_state_flag = RUS_right_opposition_state }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
			}
			SOS = {
				transfer_state = PREV
			}
		}
	}
	ELSE_IF = {
		limit = { RUS_is_exiles = yes }
		every_controlled_state = {
			limit = { 
				NOT = { has_state_flag = RUS_exiles_state }
				is_fully_controlled_by = ROOT
				is_owned_by = ROOT
			}
			SOS = {
				transfer_state = PREV
			}
		}
	}

	## Return controlled states in other countries
	# Fully controlled states go to stalin 
	every_state = {
		limit = { 
			is_fully_controlled_by = ROOT 
			NOT = { is_owned_by = ROOT }
			NOT = { has_state_flag = RUS_left_opposition_state } 
			NOT = { has_state_flag = RUS_right_opposition_state }
			NOT = { has_state_flag = RUS_exiles_state }
		}
		set_state_controller_to = SOS
	}
	# controlled, but not fully go back to the owner, if they have anything bordering 
	every_state = {
		limit = { 
			is_controlled_by = ROOT 
			NOT = { is_owned_by = ROOT }
			NOT = { has_state_flag = RUS_left_opposition_state } 
			NOT = { has_state_flag = RUS_right_opposition_state }
			NOT = { has_state_flag = RUS_exiles_state }
			any_neighbor_state = {
				is_controlled_by = PREV.OWNER
			}
		}
		set_state_controller_to = THIS.OWNER
	}
	# rest will have to sort itself out



	# Bring exiled characters back:
	

	IF = {
		limit = { check_variable = { RUS_opposition_popular_support > 1 } }
		country_event = {
			id = NSB_soviet_civil_war_common.006
			days = 2
			random_days = 2
		}
	}

	# Remove home of the revolution idea
	BWR = { remove_ideas = home_of_revolution }

	# set non recognized country = no factions allowed 
	BWR = { set_rule = { can_join_factions = no }}
	
	# add Supply hub
	IF = {
		limit = { 
			has_country_flag = RUS_supply_hub_flag
		}
		every_owned_state = {
			limit = {
				supply_node < 1
				OR = {
					state = var:ROOT.RUS_civil_war_start_state
					any_neighbor_state = { state = var:ROOT.RUS_civil_war_start_state }
				}
			}
			add_building_construction = {
				type = supply_node
				province = {
					all_provinces = yes
					limit_to_victory_point = yes
				}
				level = 1
				instant_build = yes
			}
		}
		every_owned_state = {
			limit = {
				is_controlled_by = ROOT
				any_neighbor_state = { state = var:ROOT.RUS_civil_war_start_state }
				NOT = { state = var:ROOT.RUS_civil_war_start_state }
			}
			set_variable = { ROOT.temp_target_state = THIS.id }
			ROOT = {
				build_railway = {
					level = 1 # Defaults to 1
					start_state = var:ROOT.RUS_civil_war_start_state
					target_state = var:ROOT.temp_target_state
				}
			}
			build_railway = {
				level = 2
				start_province = 4705
				target_province = 7860
			}
		}
		
		clear_variable = ROOT.temp_target_state
	}

	# Anti Comintern Pact 
	IF = {
		limit = {
			GER = { has_completed_focus = GER_anti_comitern_pact }
		}
		# Add effects to SOS
		IF = {
			limit = {
				GER = { has_completed_focus = GER_anti_soviet_pact }
			}
			SOS = { add_opinion_modifier = { target = GER modifier = worse_pact_against_us } }
		}
		ELSE = {
			SOS = { add_opinion_modifier = { target = GER modifier = pact_against_us } }
		}
		every_country = {
			limit = {
				has_country_flag = anti_comintern_member
				NOT = { has_idea = anti_soviet_pact }
			}
			SOS = { add_opinion_modifier = { target = PREV modifier = pact_against_us } }
		}
		every_country = {
			limit = { has_idea = anti_soviet_pact }
			SOS = { add_opinion_modifier = { target = PREV modifier = worse_pact_against_us } }
		}
		# Clear effect for non-communist Russias
		IF = { 
			limit = { NOT = { has_government = communism } }
			every_country = {
				limit = {
					OR = {
						tag = GER
						has_idea = anti_soviet_pact
						has_country_flag = anti_comintern_member
					}
				}
				ROOT = { remove_opinion_modifier = { target = PREV modifier = pact_against_us } }
				ROOT = { remove_opinion_modifier = { target = PREV modifier = worse_pact_against_us  } }
			}
		}
	}

	# Let the world know
	news_event = { id = nsb_news.9 hours = 8 }
}

RUS_left_opposition_civil_war_start = {
	# Rename the USSR
	set_cosmetic_tag = RUS_left_opposition # tag = SOT

	# Set party Popularity
	set_popularities = {
		communism = RUS_communist_support_before_civil_war
		democratic = RUS_democratic_support_before_civil_war
		fascism = RUS_fascist_support_before_civil_war
		neutrality = RUS_neutrality_support_before_civil_war
	}

	# Modify Stability
	

	### Set up special units
	# The Support of the NKVD
	IF = {
		limit = {
			has_country_flag = RUS_nkvd_aligned_flag
		}
		RUS_set_up_nkvd = yes
	}
	# Extras from Concessions Kick in if not already
	RUS_set_up_extras_from_concessions = yes

	# Spawn Left Opposition Militia Units
	RUS_set_up_left_opposition_militia = yes

	# Initiate Wreckers


	# Check Foreign Funds
	

}

RUS_right_opposition_civil_war_start = {
	# Rename the USSR
	set_cosmetic_tag = RUS_right_opposition # tag = SOB

	# Set party Popularity
	set_popularities = {
		communism = RUS_communist_support_before_civil_war
		democratic = RUS_democratic_support_before_civil_war
		fascism = RUS_fascist_support_before_civil_war
		neutrality = RUS_neutrality_support_before_civil_war
	}

	# Modify Stability
	
	# Reverse the collectivisation process
	

	### Set up special units
	# The Support of the NKVD
	IF = {
		limit = {
			has_country_flag = RUS_nkvd_aligned_flag
		}
		RUS_set_up_nkvd = yes
	}


	# Spawn Right Opposition Militia Units
	RUS_set_up_right_opposition_militia = yes

	# Extras from Concessions Kick in if not already
	RUS_set_up_extras_from_concessions = yes

	# Initiate Wreckers


	# POUM brigades come to help (if has supported POUM and POUM won the SCW)
	if = {
		limit = {
			has_country_flag = RUS_poum_brigades_ready_to_help_flag
		}
		RUS_poum_brigades_to_soviet_civil_war_effect = yes
	}
}

RUS_exiles_civil_war_start = {
	set_popularities = {
		communism = RUS_communist_support_before_civil_war
		democratic = RUS_democratic_support_before_civil_war
		fascism = RUS_fascist_support_before_civil_war
		neutrality = RUS_neutrality_support_before_civil_war
	}

	# Modify Stability
	add_stability = -0.15
	set_cosmetic_tag = RUS_PROVISIONAL

	### Set up special units
	# From The Eyes Fear Fokus
	IF = {
		limit = {
			has_country_flag = Sov_the_eyes_fear_flag
		}
		country_event = {
			id = NSB_Soviet_fascist_civil_war.002
			hours = 24
			random_hours = 24
		}
	}

	# From Fascist Youth Focus
	if = {
		limit = {
			has_country_flag = RUS_fascist_youth_union_flag
		}
		division_template = {
			name = "Rebyata"			#
			division_names_group = RUS_MEC_01
			regiments = {
				motorized = { x = 0 y = 0 }
				motorized = { x = 0 y = 1 }
				motorized = { x = 0 y = 2 }
				infantry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
				infantry = { x = 2 y = 0 }
				infantry = { x = 2 y = 1 }
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"2 Rebyata\"division_template = \"Rebyata\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"1 Rebyata\"division_template = \"Rebyata\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"3 Rebyata\"division_template = \"Rebyata\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"4 Rebyata\"division_template = \"Rebyata\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"5 Rebyata\"division_template = \"Rebyata\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
	}

	# Stariki
	IF = {
		limit = {
			has_country_flag = RUS_muster_the_old_guard_flag
		}
		division_template = {
			name = "Stariki"			#
			division_names_group = RUS_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
				infantry = { x = 1 y = 1 }
				infantry = { x = 1 y = 2 }
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"3 Stariki\"division_template = \"Stariki\" start_experience_factor = 0.8"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"2 Stariki\"division_template = \"Stariki\" start_experience_factor = 0.8"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
		random_owned_controlled_state = {
			create_unit = {
				division = "name = \"1 Stariki\"division_template = \"Stariki\" start_experience_factor = 0.8"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
		}
	}

	# Cavalry
	
	IF = {
		limit = {
			any_state = { has_state_flag = RUS_exiles_cavalry_flag }
		}
		division_template = {
			name = "Kavalerijskie Raskolniki"
			division_names_group = RUS_CAV_01

			regiments = {
				cavalry = { x = 0 y = 0 }
				cavalry = { x = 0 y = 1 }
				cavalry = { x = 1 y = 0 }
			}
		}
		every_state = {
			limit = { has_state_flag = RUS_exiles_cavalry_flag }
			create_unit = {
				division = "name = \"Kavalerijskie Raskolniki\"division_template = \"Kavalerijskie Raskolniki\" 	start_experience_factor = 0.02"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}



		}
		
	}

	# National Unification
	if = {
		limit = { has_country_flag = RUS_national_unification_flag }

		random_owned_controlled_state = {
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
			set_state_flag = RUS_national_unificaton_factory_bonus_flag
		}
		random_owned_controlled_state = {
			limit = {
				Not = { has_state_flag = RUS_national_unification_factory_bonus_flag}
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
	}
	# The Women's Fascist Movement
	
	# Tolkachi
	

	# Extras from Concessions Kick in if not already
	RUS_set_up_extras_from_concessions = yes

	# Initiate Wreckers


	
}



RUS_the_eyes_fear_units = {
	# Don't try to cheat ;)
	hidden_effect = {
		delete_unit_template_and_units = {
			division_template = "Ruki"
			disband = yes
		}
	}
	division_template = {
		name = "Ruki"			#
		division_names_group = RUS_INF_03
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
			infantry = { x = 1 y = 0 }
			infantry = { x = 1 y = 1 }
			infantry = { x = 1 y = 2 }
		}
	}
	set_temp_variable = { temp_units_siberia_index = 0 }
	# Add units in Siberia
	while_loop_effect = {
		limit = { check_variable = { temp_units_siberia_index < 8 }}
		random_state = {
			limit = {
				OR = {
					is_owned_by = SOS
					is_owned_by = BWR
				}
				OR  = {
					region = 149 # Eastern Siberia
					region = 256
					region = 257
					region = 258
					region = 259
					region = 260
					region = 151 # Western Siberia
					region = 261 
					region = 262 
				}
				NOT = { has_state_flag = RUS_ruki_flag } # Only one per state
			}
			create_unit = {
				division = "division_template = \"Ruki\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
			add_to_temp_variable = { temp_units_siberia_index = 1}
			set_state_flag = RUS_ruki_flag
		}
	}

	# Add units in the Ukraine
	set_temp_variable = { temp_units_ukraine_index = 0 }
	while_loop_effect = {
		limit = { check_variable = { temp_units_ukraine_index < 4 } }
		random_state = {
			limit = {
				OR = {
					is_owned_by = SOS
					is_owned_by = BWR
				}
				OR  = {
					region = 130 # Ukraine
					region = 135 # Kuban
				}
				NOT = { has_state_flag = RUS_ruki_flag }  # Only one per state
			}
			create_unit = {
				division = "division_template = \"Ruki\" start_experience_factor = 0.2"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
			add_to_temp_variable = { temp_units_ukraine_index = 1 }
			set_state_flag = RUS_ruki_flag
		}
	}


}

RUS_popular_uprising_units = {
	# Don't try to cheat ;)
	hidden_effect = {
		delete_unit_template_and_units = {
			division_template = "Opposition Partisan Brigade"
			disband = yes
		}
	}
	division_template = {
		name = "Opposition Partisan Brigade"			#
		# division_names_group = RUS_INF_04
		priority = 0
	    template_counter = 5
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
		is_locked = yes
	}
	set_temp_variable = { temp_partisan_units_index = 0 }
	set_temp_variable = { temp_partisan_units_number = RUS_opposition_popular_support }
	divide_temp_variable = { temp_partisan_units_number = 5 }
	add_to_temp_variable = { temp_partisan_units_number = 1 }
	# Add units in Prepped states
	# LOG = "Support: [?RUS_opposition_popular_support]"
	every_state = {
		limit = {
			OR = {
				is_owned_by = BWR
				is_owned_by = SOS
			}
			has_state_flag = RUS_opposition_partisans_flag
		}
		create_unit = {
			division = "name = \"Partisans\" division_template = \"Opposition Partisan Brigade\" start_experience_factor = 0.02"
			owner = BWR
			allow_spawning_on_enemy_provs = yes
			count = 1
		}
	}

	while_loop_effect = {
		limit = { check_variable = { temp_partisan_units_index < temp_partisan_units_number }}
		random_state = {
			limit = {
				is_owned_by = SOS
				NOT = { region = 132 } # Leningrad
				NOT  = { region = 133 } # Central Russia
				NOT  = { region = 131 } # Western Russia
				NOT = { has_state_flag = RUS_opposition_partisans_flag } # Only one per state
			}
			create_unit = {
				division = "name = \"Partisans\" division_template = \"Opposition Partisan Brigade\" start_experience_factor = 0.02"
				owner = BWR
				allow_spawning_on_enemy_provs = yes
				count = 1
			}
			add_to_temp_variable = { temp_partisan_units_index = 1 }
			set_state_flag = RUS_opposition_partisans_flag
		}
	}
}


RUS_opposition_support_very_low_increase_effect = {
	custom_effect_tooltip = RUS_opposition_support_very_low_increase_effect_tt
	add_to_variable = { RUS_opposition_popular_support = 1 }
	clamp_variable = {
		var = RUS_opposition_popular_support
		max = 60
		min = 0
	}
}
RUS_opposition_support_low_increase_effect = {
	custom_effect_tooltip = RUS_opposition_support_low_increase_effect_tt
	add_to_variable = { RUS_opposition_popular_support = 2 }
	clamp_variable = {
		var = RUS_opposition_popular_support
		max = 60
		min = 0
	}
}
RUS_opposition_support_medium_increase_effect = {
	custom_effect_tooltip = RUS_opposition_support_medium_increase_effect_tt
	add_to_variable = { RUS_opposition_popular_support = 3 }
	clamp_variable = {
		var = RUS_opposition_popular_support
		max = 60
		min = 0
	}
}
RUS_opposition_support_high_increase_effect = {
	custom_effect_tooltip = RUS_opposition_support_high_increase_effect_tt
	add_to_variable = { RUS_opposition_popular_support = 5 }
	clamp_variable = {
		var = RUS_opposition_popular_support
		max = 60
		min = 0
	}
}
RUS_opposition_support_low_decrease_effect = {
	custom_effect_tooltip = RUS_opposition_support_low_decrease_effect_tt
	subtract_from_variable = { RUS_opposition_popular_support = 1 }
	clamp_variable = {
		var = RUS_opposition_popular_support
		max = 60
		min = 0
	}
}

RUS_launch_stalinist_counter_measure = {
	IF = {
		limit = {
			NOT = { has_global_flag = RUS_soviet_civil_war_over } # Sanity check, in order not to activate more missions once the war has started
		}
		country_event = {
			id = NSB_soviet_civil_war_common.004
			days = 45 # simulating a cooldown
			random_days = 10
		}
	}
	IF = {
		limit = { NOT = { has_country_flag = RUS_stalinist_focuses_started } } # Only first time
		set_country_flag = RUS_stalinist_focuses_started
		country_event = {
			id = NSB_soviet_civil_war_common.005
			days = 70
		}
	}
}
RUS_get_centre_military_support = {
	IF = {
		limit = { RUS_is_left_opposition = yes }
		set_variable = { BWR.RUS_centre_army_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_army_support = BWR.RUS_left_opposition_army_support }
		set_variable = { BWR.RUS_centre_navy_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_navy_support = BWR.RUS_left_opposition_navy_support }
		set_variable = { BWR.RUS_centre_air_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_air_support = BWR.RUS_left_opposition_air_support }
	}
	ELSE_IF = {
		limit = { RUS_is_right_opposition = yes }
		set_variable = { BWR.RUS_centre_army_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_army_support = BWR.RUS_right_opposition_army_support }
		set_variable = { BWR.RUS_centre_navy_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_navy_support = BWR.RUS_right_opposition_navy_support }
		set_variable = { BWR.RUS_centre_air_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_air_support = BWR.RUS_right_opposition_air_support }
	}
	ELSE_IF = {
		limit = { RUS_is_exiles = yes }
		set_variable = { BWR.RUS_centre_army_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_army_support = BWR.RUS_exiles_army_support }
		set_variable = { BWR.RUS_centre_navy_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_navy_support = BWR.RUS_exiles_navy_support }
		set_variable = { BWR.RUS_centre_air_support = 1 }
		subtract_from_variable = { BWR.RUS_centre_air_support = BWR.RUS_exiles_air_support }
	}

}

RUS_increase_opposition_army_support = {
	custom_effect_tooltip = RUS_increase_opposition_army_support_tt
	IF = {
		limit = { RUS_is_left_opposition = yes }
		add_to_variable = { BWR.RUS_left_opposition_army_support = 0.1 }
		clamp_variable = {
			var= BWR.RUS_left_opposition_army_support
			max = 0.9
			min = 0.1
		}
	}
	ELSE_IF = {
		limit = { RUS_is_right_opposition = yes }
		add_to_variable = { BWR.RUS_right_opposition_army_support = 0.1 }
		clamp_variable = {
			var= BWR.RUS_right_opposition_army_support
			max = 0.9
			min = 0.1
		}
	}
	ELSE_IF = {
		limit = { RUS_is_exiles = yes }
		add_to_variable = { BWR.RUS_exiles_army_support = 0.1 }
		clamp_variable = {
			var = BWR.RUS_exiles_army_support
			max = 0.9
			min = 0.1
		}
	}
	RUS_get_centre_military_support = yes 
}
RUS_increase_opposition_army_support_small = {
	IF = {
		limit = {
			RUS_is_opposition = yes 
		}
		custom_effect_tooltip = RUS_increase_opposition_army_support_small_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_army_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_army_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_army_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
		}
	}
	RUS_get_centre_military_support = yes 
}

RUS_increase_opposition_navy_support_small = {
	IF = {
		limit = {
			RUS_is_opposition = yes 
		}
		custom_effect_tooltip = RUS_increase_opposition_navy_support_small_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_navy_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_navy_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_navy_support = 0.05 }
						clamp_variable = {
							var = BWR.RUS_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
		}
	}
	RUS_get_centre_military_support = yes 
}

RUS_add_armed_forces_support_state = {
	IF = {
		limit = {
			RUS_is_opposition = yes 
		}
		custom_effect_tooltip = RUS_add_armed_forces_support_state_tt
		hidden_effect = {
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_army_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_army_support = 0.01}
						clamp_variable = {
							var = BWR.RUS_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_army_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_army_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_army_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_exiles_army_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_navy_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_navy_support = 0.01}
						clamp_variable = {
							var = BWR.RUS_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_navy_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_navy_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_navy_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_exiles_navy_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			random_list = {
				25 = {}
				50 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_air_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_air_support = 0.01}
						clamp_variable = {
							var = BWR.RUS_right_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_air_support = 0.01 }
						clamp_variable = {
							var = BWR.RUS_exiles_air_support
							max = 0.9
							min = 0.1
						}
					}
				}
				25 = {
					IF = {
						limit = { RUS_is_left_opposition = yes }
						add_to_variable = { BWR.RUS_left_opposition_air_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_left_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_right_opposition = yes }
						add_to_variable = { BWR.RUS_right_opposition_air_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_right_opposition_air_support
							max = 0.9
							min = 0.1
						}
					}
					ELSE_IF = {
						limit = { RUS_is_exiles = yes }
						add_to_variable = { BWR.RUS_exiles_air_support = 0.02 }
						clamp_variable = {
							var = BWR.RUS_exiles_air_support
							max = 0.9
							min = 0.1
						}
					}
				}
			}
			RUS_get_centre_military_support = yes 
		}

	}
	
}

RUS_decrease_all_opposition_army = {
	custom_effect_tooltip = RUS_decrease_all_opposition_army_tt
	subtract_from_variable = { BWR.RUS_left_opposition_army_support = 0.02 }
	subtract_from_variable = { BWR.RUS_right_opposition_army_support = 0.02 }
	subtract_from_variable = { BWR.RUS_exiles_army_support = 0.02 }
	clamp_variable = {
		var = BWR.RUS_left_opposition_army_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_right_opposition_army_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_exiles_army_support
		max = 0.9
		min = 0.1
	}
	RUS_get_centre_military_support = yes 
}
RUS_decrease_all_opposition_navy = {
	custom_effect_tooltip = RUS_decrease_all_opposition_navy_tt
	subtract_from_variable = { BWR.RUS_left_opposition_navy_support = 0.02 }
	subtract_from_variable = { BWR.RUS_right_opposition_navy_support = 0.02 }
	subtract_from_variable = { BWR.RUS_exiles_navy_support = 0.02 }
	clamp_variable = {
		var = BWR.RUS_left_opposition_navy_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_right_opposition_navy_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_exiles_navy_support
		max = 0.9
		min = 0.1
	}
	RUS_get_centre_military_support = yes 
}
RUS_decrease_all_opposition_air = {
	custom_effect_tooltip = RUS_decrease_all_opposition_air_tt
	subtract_from_variable = { BWR.RUS_left_opposition_air_support = 0.02 }
	subtract_from_variable = { BWR.RUS_right_opposition_air_support = 0.02 }
	subtract_from_variable = { BWR.RUS_exiles_air_support = 0.02 }
	clamp_variable = {
		var = BWR.RUS_left_opposition_air_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_right_opposition_air_support
		max = 0.9
		min = 0.1
	}
	clamp_variable = {
		var = BWR.RUS_exiles_air_support
		max = 0.9
		min = 0.1
	}
	RUS_get_centre_military_support = yes 
}

RUS_set_up_dynamic_modifiers_civil_war = { #Used for Stalinist side in the CW
	### Set up modifiers based on which ones have been added

	# opposition Support modifier. New, appearing at the start of the Civil War
	add_dynamic_modifier = {
		modifier = RUS_opposition_popular_support
	}
	# Five Year Plan
	IF = {
		limit = {
			BWR = { has_dynamic_modifier = { modifier = RUS_second_five_year_plan_dynamic_modifier }}
		}
		add_dynamic_modifier = { modifier = RUS_second_five_year_plan_dynamic_modifier }
	}
	ELSE_IF = {
		limit = {
			BWR = { has_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier }}
		}
		add_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier }
	}
	ELSE_IF = {
		limit = {
			BWR = { has_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier }}
		}
		add_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier }
	}
	ELSE_IF = {
		limit = {
			BWR = { has_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier }}
		}
		add_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier }
	}
	ELSE_IF = {
		limit = {
			BWR = { has_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier }}
		}
		add_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier }
	}

	# Politburo
	# Don't add, that will be managed by Stalin's focus completion

	# Army modifier, always present
	add_dynamic_modifier = {
		modifier = RUS_the_red_army_dynamic_modifier
	}
	# AirForce, always present as well
	add_dynamic_modifier = {
		modifier = RUS_soviet_airforce_dynamic_modifier
	}



	### Set variables
	# Copy Red Army Dynamic Modifier
	set_variable = { SOS.RUS_the_red_army_mobilization_laws_cost_factor = BWR.RUS_the_red_army_mobilization_laws_cost_factor }
	set_variable = { SOS.RUS_the_red_army_army_org_factor = BWR.RUS_the_red_army_army_org_factor }
	set_variable = { SOS.RUS_the_red_army_experience_gain_army_factor = BWR.RUS_the_red_army_experience_gain_army_factor }
	set_variable = { SOS.RUS_the_red_army_experience_loss_factor = BWR.RUS_the_red_army_experience_loss_factor }
	set_variable = { SOS.RUS_the_red_army_mobilization_speed = BWR.RUS_the_red_army_mobilization_speed }
	set_variable = { SOS.RUS_the_red_army_conscription_factor = BWR.RUS_the_red_army_conscription_factor }
	set_variable = { SOS.RUS_the_red_army_modifier_army_sub_unit_cavalry_speed_factor = BWR.RUS_the_red_army_modifier_army_sub_unit_cavalry_speed_factor }
	set_variable = { SOS.RUS_the_red_army_cavalry_attack_factor = BWR.RUS_the_red_army_cavalry_attack_factor }
	set_variable = { SOS.RUS_the_red_army_training_time_factor = BWR.RUS_the_red_army_training_time_factor }
	set_variable = { SOS.RUS_the_red_army_winter_attrition_factor = BWR.RUS_the_red_army_winter_attrition_factor }
	set_variable = { SOS.RUS_the_red_army_heat_attrition_factor = BWR.RUS_the_red_army_heat_attrition_factor }
	set_variable = { SOS.RUS_the_red_army_acclimatization_cold_climate_gain_factor = BWR.RUS_the_red_army_acclimatization_cold_climate_gain_factor }
	set_variable = { SOS.RUS_the_red_army_acclimatization_hot_climate_gain_factor = BWR.RUS_the_red_army_acclimatization_hot_climate_gain_factor }
	set_variable = { SOS.RUS_the_red_army_terrain_penalty_reduction = BWR.RUS_the_red_army_terrain_penalty_reduction }
	set_variable = { SOS.RUS_the_red_army_unit_infantry_design_cost_factor = BWR.RUS_the_red_army_unit_infantry_design_cost_factor }
	set_variable = { SOS.RUS_the_red_army_unit_artillery_brigade_design_cost_factor = BWR.RUS_the_red_army_unit_artillery_brigade_design_cost_factor }
	set_variable = { SOS.RUS_the_red_army_army_org_regain = BWR.RUS_the_red_army_army_org_regain }
	set_variable = { SOS.RUS_the_red_army_special_forces_cap = BWR.RUS_the_red_army_special_forces_cap }
	set_variable = { SOS.RUS_the_red_army_land_doctrine_cost_factor = BWR.RUS_the_red_army_land_doctrine_cost_factor }
	set_variable = { SOS.RUS_the_red_army_cas_damage_reduction = BWR.RUS_the_red_army_cas_damage_reduction }
	set_variable = { SOS.RUS_the_red_army_max_dig_in = BWR.RUS_the_red_army_max_dig_in }
	set_variable = { SOS.RUS_the_red_army_dig_in_speed_factor = BWR.RUS_the_red_army_dig_in_speed_factor }
	set_variable = { SOS.RUS_the_red_army_operative_slot = BWR.RUS_the_red_army_operative_slot }
	set_variable = { SOS.RUS_the_red_army_max_command_power_mult = BWR.RUS_the_red_army_max_command_power_mult }

	# Copy Air Force Dynamic Modifiers
	set_variable = { SOS.RUS_soviet_airforce_air_accidents_factor = BWR.RUS_soviet_airforce_air_accidents_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_night_penalty = BWR.RUS_soviet_airforce_air_night_penalty }
	set_variable = { SOS.RUS_soviet_airforce_air_weather_penalty = BWR.RUS_yyy }
	set_variable = { SOS.RUS_soviet_airforce_air_wing_xp_loss_when_killed_factor = BWR.RUS_soviet_airforce_air_wing_xp_loss_when_killed_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_mission_xp_gain_factor = BWR.RUS_soviet_airforce_air_mission_xp_gain_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_ace_generation_chance_factor = BWR.RUS_soviet_airforce_air_ace_generation_chance_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_training_xp_gain_factor = BWR.RUS_soviet_airforce_air_training_xp_gain_factor }
	set_variable = { SOS.RUS_soviet_airforce_aircraft_manufacturer_cost_factor = BWR.RUS_soviet_airforce_aircraft_manufacturer_cost_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_range_factor = BWR.RUS_soviet_airforce_air_range_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_fuel_consumption_factor = BWR.RUS_soviet_airforce_air_fuel_consumption_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_agility_factor = BWR.RUS_soviet_airforce_air_agility_factor }
	set_variable = { SOS.RUS_soviet_airforce_air_strategic_bomber_night_penalty = BWR.RUS_soviet_airforce_air_strategic_bomber_night_penalty }
	set_variable = { SOS.RUS_soviet_airforce_air_cas_present_factor = BWR.RUS_soviet_airforce_air_cas_present_factor }
	set_variable = { SOS.RUS_soviet_airforce_strategic_bomb_visibility = BWR.RUS_soviet_airforce_strategic_bomb_visibility }
	set_variable = { SOS.RUS_soviet_airforce_air_mission_efficiency = BWR.RUS_soviet_airforce_air_mission_efficiency }
	set_variable = { SOS.RUS_soviet_airforce_air_nav_efficiency = BWR.RUS_soviet_airforce_air_nav_efficiency }

	# Copy 5YP variables
	set_variable = { SOS.RUS_fyp_consumer_goods_factor = BWR.RUS_fyp_consumer_goods_factor }
	set_variable = { SOS.RUS_fyp_fuel_gain_factor_from_states = BWR.RUS_fyp_fuel_gain_factor_from_states }
	set_variable = { SOS.RUS_fyp_industrial_capacity_dockyard = BWR.RUS_fyp_industrial_capacity_dockyard }
	set_variable = { SOS.RUS_fyp_industrial_capacity_factory = BWR.RUS_fyp_industrial_capacity_factory }
	set_variable = { SOS.RUS_fyp_industrial_concern_cost_factor = BWR.RUS_fyp_industrial_concern_cost_factor }
	set_variable = { SOS.RUS_fyp_industry_repair_factor = BWR.RUS_fyp_industry_repair_factor }
	set_variable = { SOS.RUS_fyp_line_change_production_efficiency_factor = BWR.RUS_fyp_line_change_production_efficiency_factor }
	set_variable = { SOS.RUS_fyp_local_resources_factor = BWR.RUS_fyp_local_resources_factor }
	set_variable = { SOS.RUS_fyp_production_factory_efficiency_gain_factor = BWR.RUS_fyp_production_factory_efficiency_gain_factor }
	set_variable = { SOS.RUS_fyp_production_factory_max_efficiency_factor = BWR.RUS_fyp_production_factory_max_efficiency_factor }
	set_variable = { SOS.RUS_fyp_production_factory_start_efficiency_factor = BWR.RUS_fyp_production_factory_start_efficiency_factor }
	set_variable = { SOS.RUS_fyp_production_oil_factor = BWR.RUS_fyp_production_oil_factor }
	set_variable = { SOS.RUS_fyp_production_speed_arms_factory_factor = BWR.RUS_fyp_production_speed_arms_factory_factor }
	set_variable = { SOS.RUS_fyp_production_speed_industrial_complex_factor = BWR.RUS_fyp_production_speed_industrial_complex_factor }

	### PROPAGANDA ###
	set_variable = { SOS.RUS_new_propaganda_campaign = BWR.RUS_new_propaganda_campaign } #Used to pick a poster slot
	set_variable = { SOS.RUS_propaganda_campaign_to_remove = BWR.RUS_propaganda_campaign_to_remove } #Used to reset a poster slot
	set_variable = { SOS.RUS_propaganda_locked_slot_index = BWR.RUS_propaganda_locked_slot_index } #### === INSERT LOCKED SLOT INDEX IN STRIPE HERE === ####
	set_variable = { SOS.RUS_propaganda_empty_slot_index = BWR.RUS_propaganda_empty_slot_index } #### === INSERT EMPTY SLOT INDEX IN STRIPE HERE === ####
	set_variable = { SOS.RUS_poster_left_icon_frame = RUS_propaganda_locked_slot_index } #Set up the appropriate empty slot GFX
	set_variable = { SOS.RUS_poster_center_icon_frame = RUS_propaganda_locked_slot_index } #Set up the appropriate locked slot GFX
	set_variable = { SOS.RUS_poster_right_icon_frame = RUS_propaganda_locked_slot_index } #Set up the appropriate locked slot GFX

	set_variable = { SOS.RUS_default_propaganda_campaign_duration = BWR.RUS_default_propaganda_campaign_duration } #Duration days for propaganda campaigns
	set_variable = { SOS.RUS_default_propaganda_campaign_cooldown = BWR.RUS_default_propaganda_campaign_cooldown } #Days of cooldown after a Propaganda Campaign has been finished.
	set_variable = { SOS.RUS_default_propaganda_campaign_old_days = BWR.RUS_default_propaganda_campaign_old_days } #A propaganda poster will age (change GFX) after this amount of days have passed since the campaign was activated
	set_variable = { SOS.RUS_propaganda_cost = BWR.RUS_propaganda_cost } #Used not only to set the rest of propaganda campaign costs here, but also used to increase each campaign cost after being activated
	set_variable = { SOS.RUS_propaganda_cost_increase = BWR.RUS_propaganda_cost_increase } #This will multiply the regular propaganda_cost each time a propaganda campaign is activated, so that it's cost is increased
	set_variable = { SOS.RUS_propaganda_motherland_calls_cost = RUS_propaganda_cost } # ID = 2
	set_variable = { SOS.RUS_propaganda_victory_at_hand_cost = RUS_propaganda_cost } # ID = 3
	set_variable = { SOS.RUS_propaganda_defend_moscow_cost = RUS_propaganda_cost } # ID = 4
	set_variable = { SOS.RUS_propaganda_fight_to_the_last_cost = RUS_propaganda_cost } # ID = 5
	set_variable = { SOS.RUS_propaganda_hit_of_hammer_cost = RUS_propaganda_cost } # ID = 6
	set_variable = { SOS.RUS_propaganda_transport_cost = RUS_propaganda_cost } # ID = 7
	set_variable = { SOS.RUS_propaganda_oil_for_the_motherland_cost = RUS_propaganda_cost } # ID = 8
	set_variable = { SOS.RUS_propaganda_more_metal_cost = RUS_propaganda_cost } # ID = 9
	set_variable = { SOS.RUS_propaganda_high_yield_cost = RUS_propaganda_cost } # ID = 10
	set_variable = { SOS.RUS_propaganda_for_the_motherland_cost = RUS_propaganda_cost } # ID = 11
	set_variable = { SOS.RUS_propaganda_heroes_forward_cost = RUS_propaganda_cost } # ID = 12
	set_variable = { SOS.RUS_propaganda_anti_capitalism_cost = RUS_propaganda_cost } # ID = 13
	set_variable = { SOS.RUS_propaganda_anti_fascism_cost = RUS_propaganda_cost } # ID = 14
	set_variable = { SOS.RUS_propaganda_treacherous_enemy_cost = RUS_propaganda_cost } # ID = 15
	set_variable = { SOS.RUS_propaganda_do_not_blab_cost = RUS_propaganda_cost } # ID = 16
	set_variable = { SOS.RUS_propaganda_sweep_scum_out_cost = RUS_propaganda_cost } # ID = 17
	set_variable = { SOS.RUS_propaganda_knowledge_cost = RUS_propaganda_cost } # ID = 18
	set_variable = { SOS.RUS_propaganda_builders_of_communism_cost = RUS_propaganda_cost } # ID = 19
	set_variable = { SOS.RUS_propaganda_glory_to_partisans_cost = RUS_propaganda_cost } # ID = 20
	set_variable = { SOS.RUS_propaganda_death_to_invaders_cost = RUS_propaganda_cost } # ID = 21
	set_variable = { SOS.RUS_propaganda_stalin_cost = RUS_propaganda_cost } # ID = 22
	set_variable = { SOS.RUS_propaganda_rebuild_to_glory_cost = RUS_propaganda_cost } # ID = 23
	set_variable = { SOS.RUS_propaganda_peace_cost = RUS_propaganda_cost } # ID = 24
	set_variable = { SOS.RUS_propaganda_happy_life_cost = RUS_propaganda_cost } # ID = 25

	set_variable = { SOS.RUS_propaganda_campaigns_taken = BWR.RUS_propaganda_campaigns_taken } #Used as a requirement for certain focuses

	#GOSPROYEKTSTROY
	set_variable = { SOS.RUS_gosproyektstroy_decision_cost = BWR.RUS_gosproyektstroy_decision_cost }
	set_variable = { SOS.RUS_gosproyektstroy_decision_time = BWR.RUS_gosproyektstroy_decision_time }

	#USSR ACADEMY OF SCIENCES
	set_variable = { SOS.RUS_national_academy_of_sciences_research_increase = BWR.RUS_national_academy_of_sciences_research_increase } #Research speed increment for each Academy of Sciences built
	set_variable = { SOS.RUS_academy_of_sciences_research_speed_factor = BWR.RUS_academy_of_sciences_research_speed_factor } #Var used by the dynamic modifier to apply the research bonus
	set_variable = { SOS.RUS_national_academy_of_sciences_construction_cost = BWR.RUS_national_academy_of_sciences_construction_cost } #The cost for activating the decision to build an academy.
	set_variable = { SOS.RUS_national_academy_of_sciences_construction_time = BWR.RUS_national_academy_of_sciences_construction_time } #The time it takes for the decision to finish and build an academy.
	set_variable = { SOS.RUS_academies_required_for_atomic_bomb_project = BWR.RUS_academies_required_for_atomic_bomb_project } #Number of academies of sciences required to pick focus Soviet Atomic Bomb Project

	#THIRD FIVE YEAR PLAN FACTORY REQUIREMENTS
	set_variable = { SOS.RUS_fyp_factory_requirement_tier_1 = BWR.RUS_fyp_factory_requirement_tier_1 }
	set_variable = { SOS.RUS_fyp_factory_requirement_tier_2 = BWR.RUS_fyp_factory_requirement_tier_2 }
	set_variable = { SOS.RUS_fyp_factory_requirement_tier_3 = BWR.RUS_fyp_factory_requirement_tier_3 }
	set_variable = { SOS.RUS_fyp_factory_requirement_tier_4 = BWR.RUS_fyp_factory_requirement_tier_4 }
	set_variable = { SOS.RUS_fyp_factory_requirement_tier_5 = BWR.RUS_fyp_factory_requirement_tier_5 }

	#THE RED FLEET NATIONAL SPIRIT VARS
	set_variable = { SOS.RUS_red_fleet_navy_refit_ic_cost = BWR.RUS_red_fleet_navy_refit_ic_cost }
	set_variable = { SOS.RUS_red_fleet_repair_speed_factor = BWR.RUS_red_fleet_repair_speed_factor }

	set_variable = { SOS.RUS_red_fleet_naval_coordination = BWR.RUS_red_fleet_naval_coordination } #-> Advanced Maneuvers
	set_variable = { SOS.RUS_red_fleet_navy_visibility = BWR.RUS_red_fleet_navy_visibility } #-> Advanced Maneuvers
	set_variable = { SOS.RUS_red_fleet_positioning = BWR.RUS_red_fleet_positioning } #-> Advanced Maneuvers
	set_variable = { SOS.RUS_red_fleet_screening_efficiency = BWR.RUS_red_fleet_screening_efficiency } #-> Advanced Maneuvers
	set_variable = { SOS.RUS_red_fleet_naval_invasion_capacity = BWR.RUS_red_fleet_naval_invasion_capacity } #-> Marines
	set_variable = { SOS.RUS_red_fleet_invasion_preparation = BWR.RUS_red_fleet_invasion_preparation } #-> Marines
	set_variable = { SOS.RUS_red_fleet_special_forces_cap = BWR.RUS_red_fleet_special_forces_cap } #-> Marines

	#DEFENSE INDUSTRY NATIONAL SPIRIT VARS
	set_variable = { SOS.RUS_defense_industry_conversion_cost_civ_to_mil_factor = BWR.RUS_defense_industry_conversion_cost_civ_to_mil_factor }
	set_variable = { SOS.RUS_defense_industry_production_factory_max_efficiency_factor = BWR.RUS_defense_industry_production_factory_max_efficiency_factor }
	set_variable = { SOS.RUS_defense_industry_production_factory_efficiency_gain_factor = BWR.RUS_defense_industry_production_factory_efficiency_gain_factor }
	set_variable = { SOS.RUS_defense_industry_line_change_production_efficiency_factor = BWR.RUS_defense_industry_line_change_production_efficiency_factor }

	set_variable = { SOS.RUS_defense_industry_tank_manufacturer_cost_factor = BWR.RUS_defense_industry_tank_manufacturer_cost_factor } #-> Tank Designer focus
	set_variable = { SOS.RUS_defense_industry_land_equipment_upgrade_xp_cost = BWR.RUS_defense_industry_land_equipment_upgrade_xp_cost } #-> Tankograd
	set_variable = { SOS.RUS_defense_industry_materiel_manufacturer_cost_factor = BWR.RUS_defense_industry_materiel_manufacturer_cost_factor } #-> Equipment Designers focus
	set_variable = { SOS.RUS_defense_industry_breakthrough_factor = BWR.RUS_defense_industry_breakthrough_factor } #-> PC of Mortar Armament
	set_variable = { SOS.RUS_defense_industry_production_speed_coastal_bunker_factor = BWR.RUS_defense_industry_production_speed_coastal_bunker_factor } #-> Military Engineering University
	set_variable = { SOS.RUS_defense_industry_production_speed_bunker_factor = BWR.RUS_defense_industry_production_speed_bunker_factor } #-> Military Engineering University
	set_variable = { SOS.RUS_defense_industry_max_dig_in_factor = BWR.RUS_defense_industry_max_dig_in_factor } #-> Military Engineering University
	set_variable = { SOS.RUS_defense_industry_army_artillery_defence_factor = BWR.RUS_defense_industry_army_artillery_defence_factor } #-> Military Engineering University

	#THE POLITBURO SPIRIT VARS
	set_variable = { SOS.RUS_the_politburo_communism_drift = BWR.RUS_the_politburo_communism_drift }

	set_variable = { SOS.RUS_the_politburo_defensive_war_stability_factor = BWR.RUS_the_politburo_defensive_war_stability_factor } # -> Socialism in One Country
	set_variable = { SOS.RUS_the_politburo_drift_defence_factor = BWR.RUS_the_politburo_drift_defence_factor } # -> Socialism in One Country
	set_variable = { SOS.RUS_the_politburo_political_power_factor = BWR.RUS_the_politburo_political_power_factor } #0.05 -> The Stalin Constitution
	set_variable = { SOS.RUS_the_politburo_economy_cost_factor = BWR.RUS_the_politburo_economy_cost_factor } # -> Secure the Administration
	set_variable = { SOS.RUS_the_politburo_trade_laws_cost_factor = BWR.RUS_the_politburo_trade_laws_cost_factor } # -> Secure the Administration
	set_variable = { SOS.RUS_the_politburo_mobilization_laws_cost_factor = BWR.RUS_the_politburo_mobilization_laws_cost_factor } # -> Secure the Administration
	set_variable = { SOS.RUS_the_politburo_good_consumer_goods_factor = BWR.RUS_the_politburo_good_consumer_goods_factor } # -> Collectivization Process
	set_variable = { SOS.RUS_the_politburo_production_speed_buildings_factor = BWR.RUS_the_politburo_production_speed_buildings_factor } # -> Collectivization Process
	set_variable = { SOS.RUS_the_politburo_global_building_slots_factor = BWR.RUS_the_politburo_global_building_slots_factor } # -> Collectivization Process
	set_variable = { SOS.RUS_the_politburo_max_surrender_limit_offset = BWR.RUS_the_politburo_max_surrender_limit_offset } # -> The Workers Dictatorship
	set_variable = { SOS.RUS_the_politburo_max_command_power = BWR.RUS_the_politburo_max_command_power } # -> Organization, Centralization, Discipline
	set_variable = { SOS.RUS_the_politburo_mobilization_speed = BWR.RUS_the_politburo_mobilization_speed } # -> Organization, Centralization, Discipline
	set_variable = { SOS.RUS_the_politburo_operative_slot = BWR.RUS_the_politburo_operative_slot } # -> Behead the Snake
	set_variable = { SOS.RUS_the_politburo_political_advisor_cost_factor = BWR.RUS_the_politburo_political_advisor_cost_factor } # -> Freedom of Debate, Unity of Action
	set_variable = { SOS.RUS_the_politburo_opinion_gain_monthly_same_ideology_factor = BWR.RUS_the_politburo_opinion_gain_monthly_same_ideology_factor } # -> The Construction of Communism

	#MERGE DESIGNERS VARS
	set_variable = { SOS.RUS_merge_designers_cost = BWR.RUS_merge_designers_cost } #Default cost for merge designer decisions
	set_variable = { SOS.RUS_merge_designers_time = BWR.RUS_merge_designers_time } #The time to complete merge designer decisions

	#INDUSTRIAL RELOCATION
	set_variable = { SOS.RUS_industrial_relocation_max_factories = BWR.RUS_industrial_relocation_max_factories } #Max amount of factories that will be relocated by a decision
	set_variable = { SOS.RUS_industrial_relocation_days = BWR.RUS_industrial_relocation_days } #Decision duration (can be halved by focus)
	set_variable = { SOS.RUS_industrial_relocation_trains_focus = BWR.RUS_industrial_relocation_trains_focus } #Trains to be used by the focus (20 trains / factory)
	set_variable = { SOS.RUS_industrial_relocation_trains_focus_negative = BWR.RUS_industrial_relocation_trains_focus_negative } #Trains to be used by the focus (20 trains / factory)
	set_variable = { SOS.RUS_industrial_relocation_trains_decision = BWR.RUS_industrial_relocation_trains_decision } #Trains to be used by the generic decision (20 trains / factory)
	set_variable = { SOS.RUS_industrial_relocation_trains_decision_negative = BWR.RUS_industrial_relocation_trains_decision_negative } #Trains to be used by the generic decision (20 trains / factory)
	set_variable = { SOS.RUS_industrial_relocation_trains_decision_aluminium = BWR.RUS_industrial_relocation_trains_decision_aluminium } #Trains to be used by the aluminium decision (20 trains / factory)
	set_variable = { SOS.RUS_industrial_relocation_trains_decision_aluminium_negative = BWR.RUS_industrial_relocation_trains_decision_aluminium_negative } #Trains to be used by the aluminium decision (20 trains / factory)

	#DECISIONS COST - For cost reductions
	set_variable = { SOS.RUS_pressure_country_government_cost = BWR.RUS_pressure_country_government_cost }
	set_variable = { SOS.RUS_promote_ideology_rallies_cost = BWR.RUS_promote_ideology_rallies_cost }
	set_variable = { SOS.RUS_send_ultimatum_to_country_cost = BWR.RUS_send_ultimatum_to_country_cost }
	set_variable = { SOS.RUS_send_infantry_equipment_cost = BWR.RUS_send_infantry_equipment_cost }
	set_variable = { SOS.RUS_peace_deal_cost = BWR.RUS_peace_deal_cost }
	set_variable = { SOS.RUS_sinkiang_proposal_cost = BWR.RUS_sinkiang_proposal_cost }
	set_variable = { SOS.RUS_sinkiang_puppeting_cost = BWR.RUS_sinkiang_puppeting_cost } #This will increase for each state controlled by SIK excluding the ones owned at game start.
	set_variable = { SOS.RUS_sinkiang_puppeting_cost_increase_per_state = BWR.RUS_sinkiang_puppeting_cost_increase_per_state }

	#DECISIONS DAYS
	set_variable = { SOS.RUS_sinkiang_mineral_prospection_days = BWR.RUS_sinkiang_mineral_prospection_days }
	set_variable = { SOS.RUS_sinkiang_oil_prospection_days = BWR.RUS_sinkiang_oil_prospection_days }
	set_variable = { SOS.RUS_sinkiang_military_aid_days = BWR.RUS_sinkiang_military_aid_days }
	set_variable = { SOS.RUS_sinkiang_support_expansion_days = BWR.RUS_sinkiang_support_expansion_days }

	#DECISIONS DAYS
	set_variable = { SOS.RUS_pressure_government_days = BWR.RUS_pressure_government_days }
	set_variable = { SOS.RUS_pressure_government_cd = BWR.RUS_pressure_government_cd }
	set_variable = { SOS.RUS_ideological_rallies_days = BWR.RUS_ideological_rallies_days }
	set_variable = { SOS.RUS_ultimatum_days = BWR.RUS_ultimatum_days }
	set_variable = { SOS.RUS_send_infantry_equipment_cd = BWR.RUS_send_infantry_equipment_cd }
	set_variable = { SOS.RUS_operation_countenance_preparation_days = BWR.RUS_operation_countenance_preparation_days }
	set_variable = { SOS.RUS_operation_countenance_mission_days = BWR.RUS_operation_countenance_mission_days }

	set_variable = { SOS.RUS_permanent_revolution_uprising_days = BWR.RUS_permanent_revolution_uprising_days }

	# set_variable = { SOS.xxx = BWR.yyy }

}

RUS_permanent_revolution_spawn_fifth_columnists_effect = {
	if = {
		limit = {
			FROM = {
				any_controlled_state = {
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
			}
		}
		FROM = {
			random_controlled_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
	}
	else_if = {
		limit = {
			FROM = {
				any_controlled_state = {
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
			}
		}
		random_state = {
			limit = {
				is_controlled_by = FROM
				is_in_home_area = yes
				is_capital = no
				NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				any_state = {
					is_controlled_by = ROOT
					distance_to = {
						target = PREV
						value < 1500
					}
				}
			}
			set_state_flag = RUS_permanent_revolution_uprising_flag
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
		}
	}
	else = {
		random_state = {
			limit = {
				is_controlled_by = FROM
				is_in_home_area = yes
				is_capital = no
				NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
			}
			set_state_flag = RUS_permanent_revolution_uprising_flag
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
			create_unit = {
				division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
				owner = ROOT
				allow_spawning_on_enemy_provs = yes
			}
		}
	}

	if = {
		limit = {
			FROM = {
				num_of_controlled_states > 4
				communism > 0.1
			}
		}
		if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 750
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else_if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 1500
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else = {
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
	}
	if = {
		limit = {
			FROM = {
				num_of_controlled_states > 6
				communism > 0.2
			}
		}
		if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
							distance_to = {
								target = PREV
								value < 750
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else_if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
							distance_to = {
								target = PREV
								value < 1500
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else = {
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
	}
	if = {
		limit = {
			FROM = {
				num_of_controlled_states > 8
				communism > 0.3
			}
		}
		if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 750
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else_if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 1500
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else = {
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
	}
	if = {
		limit = {
			FROM = {
				num_of_controlled_states > 10
				communism > 0.4
			}
		}
		if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 750
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 750
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else_if = {
			limit = {
				FROM = {
					any_controlled_state = {
						is_in_home_area = yes
						is_capital = no
						NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
						any_state = {
							is_controlled_by = ROOT
							distance_to = {
								target = PREV
								value < 1500
							}
						}
					}
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
					any_state = {
						is_controlled_by = ROOT
						distance_to = {
							target = PREV
							value < 1500
						}
					}
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
		else = {
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
			random_state = {
				limit = {
					is_controlled_by = FROM
					is_in_home_area = yes
					is_capital = no
					NOT = { has_state_flag = RUS_permanent_revolution_uprising_flag }
				}
				set_state_flag = RUS_permanent_revolution_uprising_flag
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
				create_unit = {
					division = "division_template = \"Trotskyist Revolutionary Militias\" start_experience_factor = 0.1"
					owner = ROOT
					allow_spawning_on_enemy_provs = yes
				}
			}
		}
	}
}

####### Change stuff based on ideology #######

RUS_replace_stuff_based_on_ideology_effect = {
	### FIVE YEAR PLANS
	if = {
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier_alt }
		}
	}
	else = {
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_civilian_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_third_five_year_plan_military_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_fourth_five_year_plan_dynamic_modifier }
		}
	}

	### USSR ACADEMIES OF SCIENCES
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_ussr_academy_of_sciences_dynamic_modifier }
		}
	}

	### RUSIET AIRFORCE
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_soviet_airforce_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_soviet_airforce_aircraft_production_focus_dynamic_modifier }
		}
	}

	### THE RED FLEET
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier_alt }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_1_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_surface_2_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_1_dynamic_modifier }
		}
		else_if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_fleet_submarine_2_dynamic_modifier }
		}
	}

	### THE RED ARMY
	if = { #IS NOT COMMIE -> ADD ALT STUFF
		limit = {
			NOT = { has_government = communism }
		}
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier }
			add_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier_alt }
		}
	}
	else = { #IS COMMIE -> ADD REGULAR STUFF
		if = {
			limit = {
				has_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier_alt }
			}
			remove_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier_alt }
			add_dynamic_modifier = { modifier = RUS_the_red_army_dynamic_modifier }
		}
	}
}